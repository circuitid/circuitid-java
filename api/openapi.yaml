openapi: 3.0.3
info:
  contact:
    email: support@circuitid.com
    url: https://www.circuitid.com/
  description: "# Introduction\nCircuit ID&reg; is an innovative cloud communications\
    \ platform that redefines your connectivity experience. Our cutting-edge AI-powered\
    \ solution seamlessly integrates calling, meetings, messaging, voicemail, fax,\
    \ SIP Trunking, mobile broadband, and mobile phone services, accessible wherever\
    \ you and your devices go.\n                \nWhether you are a beginner getting\
    \ started with our API or an experienced developer looking for advanced features,\
    \ this documentation site will serve as your comprehensive guide. \n\nWe are excited\
    \ to have you on board and are confident that this documentation site will empower\
    \ you to leverage the full potential of our REST API.  If you have any questions\
    \ or require further assistance, please don't hesitate to reach out to our support\
    \ team.\n                \nHappy coding!"
  termsOfService: https://www.circuitid.com/legal/legal-msa.htm
  title: Circuit ID REST API
  version: 0.47.19
  x-logo:
    url: https://cdn.circuitid.com/images/logos/circuitid-logo.png
servers:
- description: Production
  url: https://rest.circuitid.com
security:
- jwt: []
tags:
- description: "The Authentication services creates and returns a JWT that can be\
    \ used for short-term access to the API endpoints.  To create long-term tokens\
    \ one (1) year or greater, create a <a href='#tag/User-Tokens/operation/createUserToken'>User\
    \ Token (/usertokens)</a> via the API or in the <a href='https://console.circuitid.com/'\
    \ target='_blank'>Online Portal.</a><br><br>Long-term tokens are recommended for\
    \ server applications."
  name: Authentication
- description: Accepted Senders represent authorized users who have the privilege
    to send Faxes and/or SMS messages. These designated individuals or entities are
    granted the necessary permissions to initiate communication through the system's
    functionalities.
  name: Accepted Senders
- description: Announcements are pre-recorded or text-to-speech messages that plays
    during various interactions within the system.
  name: Announcements
- description: "The App Marketplace offers a curated collection of applications developed\
    \ by various software creators and companies. Users can browse, discover, and\
    \ install these applications, tailored to their specific needs and interests."
  name: App Marketplace
- description: "Contacts are records that stores information about an individual or\
    \ entity within the system's database.  Also, contacts are used with other services\
    \ to identify individuals or entities."
  name: Contacts
- description: Call Queues are a powerful set of functionalities for managing and
    organizing incoming calls in a systematic and efficient manner.
  name: Call Queues
- description: Call Queue Agents handle calls within specific call queues.
  name: Call Queue Agents
- description: Chat Rooms are virtual spaces or channels where multiple users can
    engage in real-time text-based communication.
  name: Chat Rooms
- description: "VoIP phones, or IP phones, enable voice calls over the internet through\
    \ VoIP technology. When clients are added to the system, the phones can automatically\
    \ provision themselves, simplifying setup and configuration processes."
  name: Clients
- description: "Conversations allow users to send and receive SMS/MMS messages in\
    \ real-time, facilitating communication between individuals, businesses, or groups."
  name: Conversations
- description: Conversation Messages refer to the real-time individual units of communication
    exchanged within a conversation.
  name: Conversation Messages
- description: "Online conference rooms are a virtual spaces where participants can\
    \ collaborate and communicate in real-time through audio, video, screen share\
    \ and chat-based interactions."
  name: Conference Rooms
- description: Dial-in conference numbers are dedicated phone numbers provided so
    that participants can use to join conference calls.
  name: Conference Numbers
- description: Customers represents individual customers or clients within the system.
  name: Customers
- description: A collection of applications developed by various software creators
    and companies that are available to customers in the App Marketplace.
  name: Developer Apps
- description: Customer Subscription's to Developer Apps in the App Marketplace. This
    allows customers to gain access to and utilize the features and functionalities
    provided by these apps.
  name: Developer App Subscriptions
- description: Directories are AI-powered automated phone system features that assist
    callers in locating and connecting with a specific individual within an organization
    through voice commands or extension dialing.
  name: Directories
- description: "Verified domains provide domain-based authentication for a range of\
    \ services within the system. One practical application is in authorizing accepted\
    \ senders based on the domain from which an email is sent. By validating the domain's\
    \ authenticity, the system ensures that only authorized senders can interact with\
    \ the services, enhancing security and preventing unauthorized access."
  name: Domains
- description: DNS records are used to verify domains.
  name: DNS Records
- description: Faxes allows users to send and receive faxes using the internet instead
    of traditional fax machines and phone lines.
  name: Faxes
- description: "Fax accounts are designed to facilitate the sending and receiving\
    \ of faxes, encompassing all the necessary settings for fax-related activities.\
    \ These accounts serve as a centralized platform where users can configure their\
    \ fax preferences and to manage contact information."
  name: Fax Accounts
- description: "The Find Numbers service provides users with the ability to search\
    \ for various types of phone numbers, including local, international, toll-free,\
    \ and SMS/MMS numbers. Through this service, users can easily discover and obtain\
    \ phone numbers that suit their specific needs, whether it's for local communication,\
    \ international connections, toll-free services, or messaging capabilities."
  name: Find Numbers
- description: "A firewall designed to block unwanted traffic from phone calls, SMS/MMS\
    \ messages, and outbound calls that offers robust filtering and control capabilities.\
    \ This firewall acts as a protective barrier between the system and external sources,\
    \ enabling users to define rules and criteria for filtering incoming and outgoing\
    \ communication."
  name: Firewall
- description: "Groups are used for the purpose of managing access rights, permissions,\
    \ and settings for a defined set of users, devices and/or IP addresses."
  name: Groups
- description: "Group members are users, devices and/or IP addresses that who belong\
    \ to a specific user group. These members share common attributes, roles, and/or\
    \ permissions assigned to the user group."
  name: Group Members
- description: "Holidays are specific dates and times that designate non-working periods\
    \ within the system. They serve as indicators that a business or individual is\
    \ unavailable during these times. For instance, holidays can be set up to automatically\
    \ route calls to an after-hours auto attendant, ensuring proper handling of incoming\
    \ calls during non-operational hours."
  name: Holidays
- description: "The API information endpoint offers a comprehensive range of data\
    \ that enables seamless interaction with the service. This endpoint serves as\
    \ a valuable resource, providing developers with essential information to effectively\
    \ utilize and integrate their applications or systems with the API."
  name: Info
- description: "Invoice items are individual line items or entries listed on an invoice,\
    \ representing the goods, products, or services provided."
  name: Invoice Items
- description: "Invoices serves as a record of a transaction and includes details\
    \ such as the seller's and buyer's names and addresses, invoice number, date of\
    \ issue, payments, and payment terms."
  name: Invoices
- description: "Licenses are used to apply subscriptions to users, services, or devices\
    \ within the system. By assigning licenses, administrators can enable access to\
    \ specific features or functionalities for individual users or devices, controlling\
    \ their permissions and capabilities within the system. This allows for a flexible\
    \ and customizable approach to managing subscriptions and access levels based\
    \ on user roles and requirements."
  name: Licenses
- description: "A menu, or auto attendant, is an automated virtual receptionist system\
    \ that handles incoming calls, provides callers with pre-recorded greetings and\
    \ menu options, and routes calls to the appropriate extension or department without\
    \ the need for human intervention. It allows businesses to manage call flows efficiently,\
    \ improve customer service, and streamline communications by automating call handling\
    \ processes."
  name: Menus
- description: Menu options are pre-defined selections presented to callers when they
    interact with a a menu (automated virtual receptionist system).
  name: Menu Options
- description: A campaign serves as a scenario for sending A2P (Application-to-Person)
    SMS/MMS messages. You can register a campaign to send outbound SMS/MMS messages.
  name: Message Campaigns
- description: A 10DLC Message Brand refers to a business or individual entity responsible
    for sending SMS/MMS messages. Sending SMS/MMS messages necessitates having a registered
    10DLC Message Brand.
  name: Message Brands
- description: "Phone numbers are telephone numbers associated with internet-based\
    \ communication technology, enabling voice calls and other telephony services\
    \ over the internet instead of traditional phone lines."
  name: Numbers
- description: "Phone number porting, also known as number portability, is the process\
    \ of transferring an existing phone number from one telecommunications service\
    \ provider to another. This allows users to keep their existing phone number when\
    \ switching carriers or changing their communication service, ensuring continuity\
    \ and convenience without the need to notify all contacts of a new number."
  name: Number Ports
- description: "Offices refer to physical locations or spaces within a building, complex,\
    \ or establishment where business activities, administrative tasks, and professional\
    \ work are conducted. Offices can be associated with users, services and for billing\
    \ purposes within the system."
  name: Offices
- description: A phone inbound rule is a collection of predefined configurations set
    up to route inbound calls to specific destinations or extensions based on certain
    criteria.
  name: Phone Inbound Rules
- description: A phone outbound rule is a collection of predefined configurations
    set up to route outbound calls to specific destinations or extensions based on
    certain criteria.
  name: Phone Outbound Rules
- description: A phone inbound rule action is a predefined configuration set up to
    route inbound calls to specific destinations or extensions based on certain criteria.
  name: Phone Inbound Rule Actions
- description: A phone inbound rule action is a predefined configuration set up to
    route outbound calls to specific destinations or extensions based on certain criteria.
  name: Phone Outbound Rule Actions
- description: "Rate centers are geographic areas, such as cities or regions, used\
    \ in the telecommunications."
  name: Rate Centers
- description: "Servers, like Asterisk, FreeSWITCH, Skype, 3CX and others are software-based\
    \ communication systems that facilitate Voice over Internet Protocol (VoIP) services.\
    \ These servers handle call processing, signaling, and media functions, allowing\
    \ users to make voice and video calls over the internet."
  name: Servers
- description: "A time schedule is a configuration that allows users to define specific\
    \ periods when a business is open or closed. This schedule determines how incoming\
    \ calls are handled during different hours of the day, week, or year."
  name: Time Schedules
- description: A user refers to an individual or an authorized entity who has access
    to the system and consumes its services or use its management features to configure
    the account.
  name: Users
- description: User tokens are long-lived JWT that can be used to access the API.
  name: User Tokens
- description: Virtual Extensions are extensions that can be used to route callers
    to specific destinations within the phone system.
  name: Virtual Extensions
- description: "Voicemail is a feature that allows callers to leave recorded messages\
    \ when the recipient is unable to answer a phone call. It serves as a digital\
    \ answering machine, enabling people to retrieve and listen to messages at their\
    \ convenience."
  name: Voicemail
paths:
  /authentication:
    post:
      description: Add a new object to the system.
      operationId: createAuthentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthentication_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts: application/json
  /acceptedsenders/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeAcceptedSender
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAcceptedSender_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Accepted Senders
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getAcceptedSender
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAcceptedSender_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Accepted Senders
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchAcceptedSender
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acceptedsenders'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAcceptedSender_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Accepted Senders
      x-content-type: application/json
      x-accepts: application/json
  /acceptedsenders:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findAcceptedSenders
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAcceptedSenders_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Accepted Senders
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createAcceptedSender
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acceptedsenders'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAcceptedSender_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Accepted Senders
      x-content-type: application/json
      x-accepts: application/json
  /announcements/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeAnnouncement
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnnouncement_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Announcements
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getAnnouncement
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnnouncement_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Announcements
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchAnnouncement
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcements'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnnouncement_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Announcements
      x-content-type: application/json
      x-accepts: application/json
  /announcements:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findAnnouncements
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAnnouncements_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Announcements
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcements'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnnouncement_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Announcements
      x-content-type: application/json
      x-accepts: application/json
  /appmarketplace:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findAppMarketplace
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAppMarketplace_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - App Marketplace
      x-accepts: application/json
  /contacts/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeContact
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getContact_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Contacts
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getContact
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getContact_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Contacts
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchContact
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getContact_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Contacts
      x-content-type: application/json
      x-accepts: application/json
  /contacts:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findContacts
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findContacts_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Contacts
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contacts'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getContact_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Contacts
      x-content-type: application/json
      x-accepts: application/json
  /callqueues/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeCallQueue
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Call Queues
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getCallQueue
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Call Queues
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchCallQueue
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callqueues'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Call Queues
      x-content-type: application/json
      x-accepts: application/json
  /callqueues:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findCallQueues
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findCallQueues_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Call Queues
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createCallQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callqueues'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Call Queues
      x-content-type: application/json
      x-accepts: application/json
  /callqueueagents/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeCallQueue Agent
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_Agent_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Call Queue Agents
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getCallQueue Agent
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_Agent_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Call Queue Agents
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchCallQueue Agent
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callqueueagents'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_Agent_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Call Queue Agents
      x-content-type: application/json
      x-accepts: application/json
  /callqueueagents:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findCallQueue Agents
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findCallQueue_Agents_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Call Queue Agents
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createCallQueue Agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/callqueueagents'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallQueue_Agent_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Call Queue Agents
      x-content-type: application/json
      x-accepts: application/json
  /chatrooms/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeChatRoom
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChatRoom_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Chat Rooms
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getChatRoom
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChatRoom_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Chat Rooms
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchChatRoom
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chatrooms'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChatRoom_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Chat Rooms
      x-content-type: application/json
      x-accepts: application/json
  /chatrooms:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findChatRooms
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findChatRooms_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Chat Rooms
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createChatRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chatrooms'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChatRoom_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Chat Rooms
      x-content-type: application/json
      x-accepts: application/json
  /clients/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeClient
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getClient_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Clients
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getClient
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getClient_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Clients
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchClient
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clients'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getClient_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Clients
      x-content-type: application/json
      x-accepts: application/json
  /clients:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findClients
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findClients_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Clients
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clients'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getClient_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Clients
      x-content-type: application/json
      x-accepts: application/json
  /conversations/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeConversation
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversation_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Conversations
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getConversation
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversation_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Conversations
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchConversation
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversations'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversation_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Conversations
      x-content-type: application/json
      x-accepts: application/json
  /conversations:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findConversations
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findConversations_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Conversations
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversations'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversation_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Conversations
      x-content-type: application/json
      x-accepts: application/json
  /conversationmessages/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeConversationMessage
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversationMessage_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Conversation Messages
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getConversationMessage
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversationMessage_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Conversation Messages
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchConversationMessage
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversationmessages'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversationMessage_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Conversation Messages
      x-content-type: application/json
      x-accepts: application/json
  /conversationmessages:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findConversationMessages
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findConversationMessages_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Conversation Messages
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createConversationMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversationmessages'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConversationMessage_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Conversation Messages
      x-content-type: application/json
      x-accepts: application/json
  /conferencerooms/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeConferenceRoom
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConferenceRoom_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Conference Rooms
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getConferenceRoom
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConferenceRoom_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Conference Rooms
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchConferenceRoom
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conferencerooms'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConferenceRoom_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Conference Rooms
      x-content-type: application/json
      x-accepts: application/json
  /conferencerooms:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findConferenceRooms
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findConferenceRooms_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Conference Rooms
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createConferenceRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conferencerooms'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConferenceRoom_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Conference Rooms
      x-content-type: application/json
      x-accepts: application/json
  /conferencenumbers:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findConferenceNumbers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAppMarketplace_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Conference Numbers
      x-accepts: application/json
  /customers/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeCustomer
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomer_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Customers
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getCustomer
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomer_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Customers
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchCustomer
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customers'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomer_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /customers:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findCustomers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findCustomers_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Customers
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customers'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomer_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /developerapps/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeDeveloperApp
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Developer Apps
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getDeveloperApp
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Developer Apps
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchDeveloperApp
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/developerapps'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Developer Apps
      x-content-type: application/json
      x-accepts: application/json
  /developerapps:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findDeveloperApps
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findDeveloperApps_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Developer Apps
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createDeveloperApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/developerapps'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Developer Apps
      x-content-type: application/json
      x-accepts: application/json
  /developerappsubscriptions/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeDeveloperApp Subscription
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_Subscription_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Developer App Subscriptions
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getDeveloperApp Subscription
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_Subscription_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Developer App Subscriptions
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchDeveloperApp Subscription
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/developerappsubscriptions'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_Subscription_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Developer App Subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /developerappsubscriptions:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findDeveloperApp Subscriptions
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findDeveloperApp_Subscriptions_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Developer App Subscriptions
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createDeveloperApp Subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/developerappsubscriptions'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeveloperApp_Subscription_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Developer App Subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /directories/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removedirectory
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getdirectory_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Directories
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getdirectory
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getdirectory_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Directories
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchdirectory
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/directories'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getdirectory_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Directories
      x-content-type: application/json
      x-accepts: application/json
  /directories:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findDirectories
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findDirectories_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Directories
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createdirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/directories'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getdirectory_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Directories
      x-content-type: application/json
      x-accepts: application/json
  /domains/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeDomain
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDomain_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Domains
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getDomain
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDomain_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Domains
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchDomain
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domains'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDomain_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Domains
      x-content-type: application/json
      x-accepts: application/json
  /domains:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findDomains
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findDomains_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Domains
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domains'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDomain_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Domains
      x-content-type: application/json
      x-accepts: application/json
  /dnsrecords:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findDNSRecords
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAppMarketplace_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - DNS Records
      x-accepts: application/json
  /faxes/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeFax
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFax_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Faxes
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getFax
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFax_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Faxes
      x-accepts: application/json
  /faxes:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findFaxes
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findFaxes_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Faxes
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createFax
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/faxes'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFax_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Faxes
      x-content-type: application/json
      x-accepts: application/json
  /faxaccounts/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeFaxAccount
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFaxAccount_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Fax Accounts
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getFaxAccount
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFaxAccount_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Fax Accounts
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchFaxAccount
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/faxaccounts'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFaxAccount_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Fax Accounts
      x-content-type: application/json
      x-accepts: application/json
  /faxaccounts:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findFaxAccounts
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findFaxAccounts_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Fax Accounts
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createFaxAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/faxaccounts'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFaxAccount_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Fax Accounts
      x-content-type: application/json
      x-accepts: application/json
  /findnumbers:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findFindNumbers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAppMarketplace_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Find Numbers
      x-accepts: application/json
  /firewall/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeFirewall
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFirewall_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Firewall
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getFirewall
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFirewall_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Firewall
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchFirewall
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFirewall_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Firewall
      x-content-type: application/json
      x-accepts: application/json
  /firewall:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findFirewall
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findFirewall_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Firewall
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createFirewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/firewall'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFirewall_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Firewall
      x-content-type: application/json
      x-accepts: application/json
  /groups/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeGroup
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroup_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Groups
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getGroup
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroup_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Groups
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchGroup
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroup_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Groups
      x-content-type: application/json
      x-accepts: application/json
  /groups:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findGroups
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findGroups_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Groups
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroup_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Groups
      x-content-type: application/json
      x-accepts: application/json
  /groupmembers/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeGroupMember
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupMember_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Group Members
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getGroupMember
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupMember_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Group Members
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchGroupMember
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupmembers'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupMember_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Group Members
      x-content-type: application/json
      x-accepts: application/json
  /groupmembers:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findGroupMembers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findGroupMembers_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Group Members
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createGroupMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupmembers'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupMember_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Group Members
      x-content-type: application/json
      x-accepts: application/json
  /holidays/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeHoliday
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getHoliday_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Holidays
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getHoliday
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getHoliday_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Holidays
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchHoliday
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/holidays'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getHoliday_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Holidays
      x-content-type: application/json
      x-accepts: application/json
  /holidays:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findHolidays
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findHolidays_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Holidays
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createHoliday
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/holidays'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getHoliday_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Holidays
      x-content-type: application/json
      x-accepts: application/json
  /info:
    get:
      description: Returns an object containing the requested information.
      operationId: getInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object
      tags:
      - Info
      x-accepts: application/json
  /invoiceitems/{id}:
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getInvoiceItem
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getInvoiceItem_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Invoice Items
      x-accepts: application/json
  /invoiceitems:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findInvoiceItems
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findInvoiceItems_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Invoice Items
      x-accepts: application/json
  /invoices/{id}:
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getInvoice
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getInvoice_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Invoices
      x-accepts: application/json
  /invoices:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findInvoices
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findInvoices_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Invoices
      x-accepts: application/json
  /licenses/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeLicense
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLicense_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Licenses
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getLicense
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLicense_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Licenses
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchLicense
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/licenses'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLicense_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Licenses
      x-content-type: application/json
      x-accepts: application/json
  /licenses:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findLicenses
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findLicenses_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Licenses
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createLicense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/licenses'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLicense_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Licenses
      x-content-type: application/json
      x-accepts: application/json
  /menus/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeMenu
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenu_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Menus
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getMenu
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenu_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Menus
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchMenu
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menus'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenu_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Menus
      x-content-type: application/json
      x-accepts: application/json
  /menus:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findMenus
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findMenus_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Menus
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createMenu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menus'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenu_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Menus
      x-content-type: application/json
      x-accepts: application/json
  /menuoptions/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeMenuOption
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenuOption_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Menu Options
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getMenuOption
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenuOption_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Menu Options
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchMenuOption
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menuoptions'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenuOption_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Menu Options
      x-content-type: application/json
      x-accepts: application/json
  /menuoptions:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findMenuOptions
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findMenuOptions_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Menu Options
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createMenuOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menuoptions'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMenuOption_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Menu Options
      x-content-type: application/json
      x-accepts: application/json
  /messagecampaigns/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeMessageCampaign
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageCampaign_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Message Campaigns
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getMessageCampaign
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageCampaign_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Message Campaigns
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchMessageCampaign
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messagecampaigns'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageCampaign_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Message Campaigns
      x-content-type: application/json
      x-accepts: application/json
  /messagecampaigns:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findMessageCampaigns
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findMessageCampaigns_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Message Campaigns
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createMessageCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messagecampaigns'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageCampaign_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Message Campaigns
      x-content-type: application/json
      x-accepts: application/json
  /messagebrands/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeMessageBrand
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageBrand_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Message Brands
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getMessageBrand
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageBrand_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Message Brands
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchMessageBrand
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messagebrands'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageBrand_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Message Brands
      x-content-type: application/json
      x-accepts: application/json
  /messagebrands:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findMessageBrands
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findMessageBrands_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Message Brands
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createMessageBrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messagebrands'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessageBrand_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Message Brands
      x-content-type: application/json
      x-accepts: application/json
  /numbers/{id}:
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getNumber
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNumber_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Numbers
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchNumber
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/numbers'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNumber_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Numbers
      x-content-type: application/json
      x-accepts: application/json
  /numbers:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findNumbers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findNumbers_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Numbers
      x-accepts: application/json
  /numberports/{id}:
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getNumberPort
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNumberPort_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Number Ports
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchNumberPort
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/numberports'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNumberPort_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Number Ports
      x-content-type: application/json
      x-accepts: application/json
  /numberports:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findNumberPorts
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findNumberPorts_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Number Ports
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createNumberPort
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/numberports'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNumberPort_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Number Ports
      x-content-type: application/json
      x-accepts: application/json
  /offices/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeOffice
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOffice_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Offices
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getOffice
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOffice_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Offices
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchOffice
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offices'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOffice_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Offices
      x-content-type: application/json
      x-accepts: application/json
  /offices:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findOffices
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findOffices_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Offices
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offices'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOffice_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Offices
      x-content-type: application/json
      x-accepts: application/json
  /phoneinboundrules/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removePhoneInbound Rule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Phone Inbound Rules
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getPhoneInbound Rule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Phone Inbound Rules
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchPhoneInbound Rule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneinboundrules'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Phone Inbound Rules
      x-content-type: application/json
      x-accepts: application/json
  /phoneinboundrules:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findPhoneInbound Rules
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findPhoneInbound_Rules_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Phone Inbound Rules
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createPhoneInbound Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneinboundrules'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Phone Inbound Rules
      x-content-type: application/json
      x-accepts: application/json
  /phoneoutboundrules/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removePhoneOutbound Rule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Phone Outbound Rules
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getPhoneOutbound Rule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Phone Outbound Rules
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchPhoneOutbound Rule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneoutboundrules'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Phone Outbound Rules
      x-content-type: application/json
      x-accepts: application/json
  /phoneoutboundrules:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findPhoneOutbound Rules
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findPhoneOutbound_Rules_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Phone Outbound Rules
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createPhoneOutbound Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneoutboundrules'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Phone Outbound Rules
      x-content-type: application/json
      x-accepts: application/json
  /phoneinboundruleactions/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removePhoneInbound Rule Action
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_Action_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Phone Inbound Rule Actions
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getPhoneInbound Rule Action
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_Action_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Phone Inbound Rule Actions
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchPhoneInbound Rule Action
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneinboundruleactions'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_Action_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Phone Inbound Rule Actions
      x-content-type: application/json
      x-accepts: application/json
  /phoneinboundruleactions:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findPhoneInbound Rule Actions
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findPhoneInbound_Rule_Actions_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Phone Inbound Rule Actions
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createPhoneInbound Rule Action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneinboundruleactions'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneInbound_Rule_Action_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Phone Inbound Rule Actions
      x-content-type: application/json
      x-accepts: application/json
  /phoneoutboundruleactions/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removePhoneOutbound Rule Action
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_Action_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Phone Outbound Rule Actions
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getPhoneOutbound Rule Action
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_Action_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Phone Outbound Rule Actions
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchPhoneOutbound Rule Action
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneoutboundruleactions'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_Action_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Phone Outbound Rule Actions
      x-content-type: application/json
      x-accepts: application/json
  /phoneoutboundruleactions:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findPhoneOutbound Rule Actions
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findPhoneOutbound_Rule_Actions_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Phone Outbound Rule Actions
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createPhoneOutbound Rule Action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoneoutboundruleactions'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhoneOutbound_Rule_Action_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Phone Outbound Rule Actions
      x-content-type: application/json
      x-accepts: application/json
  /ratecenters/{id}:
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getRateCenter
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRateCenter_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Rate Centers
      x-accepts: application/json
  /ratecenters:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findRateCenters
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findRateCenters_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Rate Centers
      x-accepts: application/json
  /servers/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeServer
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getServer_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Servers
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getServer
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getServer_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Servers
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchServer
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servers'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getServer_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Servers
      x-content-type: application/json
      x-accepts: application/json
  /servers:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findServers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findServers_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Servers
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servers'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getServer_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Servers
      x-content-type: application/json
      x-accepts: application/json
  /timeschedules/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeTimeSchedule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTimeSchedule_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Time Schedules
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getTimeSchedule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTimeSchedule_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Time Schedules
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchTimeSchedule
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timeschedules'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTimeSchedule_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Time Schedules
      x-content-type: application/json
      x-accepts: application/json
  /timeschedules:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findTimeSchedules
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findTimeSchedules_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Time Schedules
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createTimeSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timeschedules'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTimeSchedule_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Time Schedules
      x-content-type: application/json
      x-accepts: application/json
  /users/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeUser
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Users
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getUser
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Users
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchUser
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /users:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findUsers
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findUsers_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Users
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /usertokens/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeUserToken
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserToken_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - User Tokens
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getUserToken
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserToken_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - User Tokens
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchUserToken
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usertokens'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserToken_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - User Tokens
      x-content-type: application/json
      x-accepts: application/json
  /usertokens:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findUserTokens
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findUserTokens_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - User Tokens
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createUserToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usertokens'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserToken_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - User Tokens
      x-content-type: application/json
      x-accepts: application/json
  /virtualextensions/{id}:
    delete:
      description: "Delete an object by id, removing it from the service."
      operationId: removeVirtualExtension
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVirtualExtension_200_response'
          description: A JSON object containing the deleted data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Delete object by id
      tags:
      - Virtual Extensions
      x-accepts: application/json
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getVirtualExtension
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVirtualExtension_200_response'
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Virtual Extensions
      x-accepts: application/json
    patch:
      description: Make updates to specific fields within the record without replacing
        the entire dataset.
      operationId: patchVirtualExtension
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/virtualextensions'
        description: The request data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVirtualExtension_200_response'
          description: A JSON object containing the modified data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Patch object's data
      tags:
      - Virtual Extensions
      x-content-type: application/json
      x-accepts: application/json
  /virtualextensions:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findVirtualExtensions
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findVirtualExtensions_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Virtual Extensions
      x-accepts: application/json
    post:
      description: Add a new object to the system.
      operationId: createVirtualExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/virtualextensions'
        description: The JSON object that will be posted to the REST API endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVirtualExtension_200_response'
          description: A JSON object containing the new object created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Create a new object
      tags:
      - Virtual Extensions
      x-content-type: application/json
      x-accepts: application/json
  /voicemail/{id}:
    get:
      description: Get an object from the REST API Endpoint by its unique id.
      operationId: getVoicemail
      parameters:
      - description: The ObjectId (unique 12 bytes ID) of record you would like to
          GET.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: A JSON object containing the requested data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Get object by id
      tags:
      - Voicemail
      x-accepts: application/json
  /voicemail:
    get:
      description: 'Search and retrieve multiple objects simultaneously. '
      operationId: findVoicemail
      parameters:
      - description: Filter results by the specified value.
        explode: true
        in: query
        name: $search
        required: false
        schema:
          type: string
        style: form
      - description: $limit will return only the number of results you specify.
        explode: true
        in: query
        name: $limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: $skip will skip the specified number of results.
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "$sort will sort based on the object you provide. It can contain\
          \ a list of properties by which to sort mapped to the order (1 ascending,\
          \ -1 descending)."
        explode: true
        in: query
        name: $sort
        required: false
        schema:
          type: object
        style: form
      - description: $select allows to pick which fields to include in the result.
        explode: true
        in: query
        name: $select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Find all records that match any of the given criteria.
        explode: true
        in: query
        name: $or
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      - description: Find all records that match all of the given criteria.
        explode: true
        in: query
        name: $and
        required: false
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/findAppMarketplace_200_response'
          description: A JSON object containing the requested data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Not Acceptable
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Timeout
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: General Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseError'
          description: Unavailable
      summary: Find multiple objects
      tags:
      - Voicemail
      x-accepts: application/json
components:
  parameters:
    id:
      description: The ObjectId (unique 12 bytes ID) of record you would like to GET.
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    limit:
      description: $limit will return only the number of results you specify.
      explode: true
      in: query
      name: $limit
      required: false
      schema:
        format: int32
        type: integer
      style: form
    skip:
      description: $skip will skip the specified number of results.
      explode: true
      in: query
      name: $skip
      required: false
      schema:
        format: int32
        type: integer
      style: form
    sort:
      description: "$sort will sort based on the object you provide. It can contain\
        \ a list of properties by which to sort mapped to the order (1 ascending,\
        \ -1 descending)."
      explode: true
      in: query
      name: $sort
      required: false
      schema:
        type: object
      style: form
    search:
      description: Filter results by the specified value.
      explode: true
      in: query
      name: $search
      required: false
      schema:
        type: string
      style: form
    select:
      description: $select allows to pick which fields to include in the result.
      explode: true
      in: query
      name: $select
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    or:
      description: Find all records that match any of the given criteria.
      explode: true
      in: query
      name: $or
      required: false
      schema:
        items:
          type: object
        type: array
      style: form
    and:
      description: Find all records that match all of the given criteria.
      explode: true
      in: query
      name: $and
      required: false
      schema:
        items:
          type: object
        type: array
      style: form
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Bad Request
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Not Authenticated
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Forbidden
    "405":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Method Not Allowed
    "406":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Not Acceptable
    "408":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Timeout
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Too Many Requests
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: General Error
    "503":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError'
      description: Unavailable
    find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/find'
      description: A JSON object containing the requested data
  schemas:
    responseError:
      properties:
        name:
          type: string
        message:
          type: string
        code:
          format: int32
          type: integer
        className:
          type: string
        errors:
          items:
            type: string
          type: array
      type: object
    responseDate:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    responseUsers:
      properties:
        createdByUserId:
          description: ObjectId (unique 12 bytes ID)
          type: string
        updatedByUserId:
          description: ObjectId (unique 12 bytes ID)
          type: string
      type: object
    find:
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
      required:
      - data
      - limit
      - total
      type: object
    authentication:
      minProperties: 1
      properties:
        username:
          type: string
        password:
          type: string
        strategy:
          enum:
          - local
          type: string
      required:
      - password
      - strategy
      - username
      type: object
    acceptedsenders:
      example:
        ref: users
        service: service
        serviceRef: serviceRef
        object: object
      minProperties: 1
      properties:
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
        service:
          description: ObjectId (unique 12 bytes ID)
          type: string
        serviceRef:
          type: string
        ref:
          enum:
          - users
          - domains
          - contacts
          type: string
      required:
      - object
      - ref
      - service
      - serviceRef
      type: object
    announcements:
      example:
        voice: voice
        attachments:
        - http://example.com/aeiou
        - http://example.com/aeiou
        name: name
        text: text
        type: tts
      minProperties: 1
      properties:
        attachments:
          items:
            format: url
            type: string
          type: array
        name:
          maxLength: 45
          type: string
        type:
          enum:
          - tts
          - mp3
          type: string
        voice:
          type: string
        text:
          maxLength: 255
          minLength: 2
          type: string
      required:
      - name
      - type
      type: object
    contacts:
      example:
        extension: 5
        faxPhone: faxPhone
        last: last
        mobilePhone: mobilePhone
        jobTitle: jobTitle
        businessPhone: businessPhone
        avatar: avatar
        department: department
        email: email
        first: first
      minProperties: 1
      properties:
        email:
          maxLength: 45
          type: string
        first:
          maxLength: 45
          type: string
        last:
          maxLength: 45
          type: string
        mobilePhone:
          maxLength: 20
          type: string
        businessPhone:
          maxLength: 20
          type: string
        faxPhone:
          maxLength: 20
          type: string
        extension:
          format: int32
          type: integer
        jobTitle:
          maxLength: 45
          type: string
        department:
          maxLength: 45
          type: string
        avatar:
          maxLength: 255
          type: string
      required:
      - first
      type: object
    callqueues:
      example:
        announcePosition: 5
        rejectTimeout: 2
        discardAbandonedAfter: 1
        maxNoAnswer: 9
        abandonedResumeAllowed: true
        callerResumeTimeout: 5
        noAnswerDelayTimeout: 3
        moh: deafult
        maxWaitTime: 2
        tierRulesApply: false
        wrapUpTimeout: 7
        maxWaitTimeNoAgentTimeReached: 1
        tierRuleNoAgentNoWait: true
        tierRuleWaitSecond: 1
        timeBasedScore: queue
        maxWaitTimeNoAgent: 7
        name: name
        busyTimeout: 4
        strategy: ring-all
        tierRuleWaitMultiplyLevel: true
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        strategy:
          enum:
          - ring-all
          - longest-idle-agent
          - round-robin
          - top-down
          - agent-with-least-talk-time
          - agent-with-fewest-calls
          - sequentially-by-agent-order
          - random
          type: string
        announcePosition:
          format: int32
          type: integer
        moh:
          default: deafult
          maxLength: 255
          type: string
        callerResumeTimeout:
          default: 3600
          format: int32
          type: integer
        maxWaitTime:
          default: 300
          format: int32
          type: integer
        maxWaitTimeNoAgent:
          default: 300
          format: int32
          type: integer
        maxNoAnswer:
          default: 1000000
          format: int32
          type: integer
        noAnswerDelayTimeout:
          default: 60
          format: int32
          type: integer
        rejectTimeout:
          default: 60
          format: int32
          type: integer
        busyTimeout:
          default: 60
          format: int32
          type: integer
        wrapUpTimeout:
          default: 10
          format: int32
          type: integer
        timeBasedScore:
          default: queue
          enum:
          - queue
          - system
          type: string
        tierRulesApply:
          default: false
          enum:
          - true
          - false
          type: boolean
        tierRuleNoAgentNoWait:
          default: true
          enum:
          - true
          - false
          type: boolean
        tierRuleWaitSecond:
          default: 300
          format: int32
          type: integer
        tierRuleWaitMultiplyLevel:
          default: true
          enum:
          - true
          - false
          type: boolean
        abandonedResumeAllowed:
          default: true
          enum:
          - true
          - false
          type: boolean
        discardAbandonedAfter:
          default: 14400
          format: int32
          type: integer
        maxWaitTimeNoAgentTimeReached:
          default: 5
          format: int32
          type: integer
      required:
      - abandonedResumeAllowed
      - callerResumeTimeout
      - maxNoAnswer
      - maxWaitTime
      - maxWaitTimeNoAgent
      - maxWaitTimeNoAgentTimeReached
      - moh
      - name
      - strategy
      - tierRuleNoAgentNoWait
      - tierRuleWaitMultiplyLevel
      - tierRulesApply
      - timeBasedScore
      type: object
    callqueueagents:
      example:
        tier: 5
        callqueue: callqueue
        priority: 5
        user: user
      minProperties: 1
      properties:
        callqueue:
          description: ObjectId (unique 12 bytes ID)
          type: string
        user:
          description: ObjectId (unique 12 bytes ID)
          type: string
        priority:
          default: 1
          format: int32
          type: integer
        tier:
          default: 1
          format: int32
          type: integer
      required:
      - callqueue
      - priority
      - tier
      - user
      type: object
    chatrooms:
      example:
        name: name
        direct: true
        avatar: avatar
        users: "{}"
      minProperties: 1
      properties:
        name:
          maxLength: 255
          type: string
        users:
          type: object
        avatar:
          maxLength: 512
          type: string
        direct:
          enum:
          - true
          - false
          type: boolean
      required:
      - users
      type: object
    clients:
      example:
        manufacture: cisco
        name: name
        httpUserAgent: httpUserAgent
        user: user
        mac: mac
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        user:
          description: ObjectId (unique 12 bytes ID)
          type: string
        mac:
          maxLength: 45
          minLength: 5
          type: string
        httpUserAgent:
          maxLength: 45
          minLength: 1
          type: string
        manufacture:
          enum:
          - cisco
          - grandstream
          - polycom
          maxLength: 20
          minLength: 4
          type: string
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
      required:
      - mac
      - name
      - user
      type: object
    conversations:
      example:
        number: number
        ref: contacts
        channel: email
        contacts:
        - ""
        - ""
        object: object
        status: open
      minProperties: 1
      properties:
        contacts:
          items: {}
          type: array
        number:
          description: ObjectId (unique 12 bytes ID)
          type: string
        channel:
          enum:
          - email
          - sms
          - phone
          type: string
        ref:
          enum:
          - contacts
          - users
          type: string
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
        status:
          default: open
          enum:
          - open
          - resolved
          type: string
      required:
      - channel
      - object
      - ref
      - status
      type: object
    conversationmessages:
      example:
        fromNumber: fromNumber
        attachments:
        - ""
        - ""
        from: "{}"
        to:
        - ""
        - ""
        text: text
        conversation: conversation
        referenceId: referenceId
        direction: inbound
      minProperties: 1
      properties:
        conversation:
          description: ObjectId (unique 12 bytes ID)
          type: string
        from:
          type: object
        fromNumber:
          maxLength: 40
          type: string
        to:
          items: {}
          type: array
        text:
          maxLength: 2048
          type: string
        direction:
          enum:
          - inbound
          - outbound
          type: string
        attachments:
          items: {}
          type: array
        referenceId:
          maxLength: 255
          type: string
      required:
      - direction
      - from
      - fromNumber
      - to
      type: object
    conferencerooms:
      example:
        lobby: 5
        isUserRoom: true
        dialInPin: 5
        name: name
        chatroom: chatroom
        share: groups
        requirePasscode: 2
        passcode: passcode
        isChatRoom: true
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        passcode:
          maxLength: 20
          minLength: 6
          type: string
        dialInPin:
          format: int32
          type: integer
        isUserRoom:
          enum:
          - true
          - false
          type: boolean
        isChatRoom:
          enum:
          - true
          - false
          type: boolean
        lobby:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        requirePasscode:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        share:
          enum:
          - groups
          - customers
          type: string
        chatroom:
          description: ObjectId (unique 12 bytes ID)
          type: string
      required:
      - name
      type: object
    customers:
      example:
        createdByIP: createdByIP
        mediaBypass: 4
        automaticRefillAmount: 2
        lowBalanceAlertCount: 9
        holdMusic: 6
        lowBalanceAlertAt: 2000-01-23T04:56:07.000+00:00
        websiteUrl: websiteUrl
        logo: logo
        credit: 5
        transcribeCalls: 7
        cdrRetention: 1
        cnamLookUps: 1
        internationalCalling: 3
        billingUserId: billingUserId
        adminUserId: adminUserId
        supportUserId: supportUserId
        accountLock: 7
        lastAutomaticRefillInvoice: lastAutomaticRefillInvoice
        lowBalanceAlertAmount: 7
        callRecording: 1
        defaultBillMethod: credit
        callDebug: 2
        name: name
        maxOutboundCallRate: 1
        callRecordingUserId: callRecordingUserId
        callForwardingCallLimit: 5
        status: active
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        status:
          default: active
          enum:
          - active
          - suspended
          - terminated
          - fraud
          type: string
        websiteUrl:
          maxLength: 255
          type: string
        logo:
          maxLength: 255
          type: string
        credit:
          default: 0
          format: int32
          type: integer
        adminUserId:
          description: ObjectId (unique 12 bytes ID)
          type: string
        billingUserId:
          description: ObjectId (unique 12 bytes ID)
          type: string
        callRecordingUserId:
          description: ObjectId (unique 12 bytes ID)
          type: string
        callForwardingCallLimit:
          default: 10
          format: int32
          type: integer
        supportUserId:
          description: ObjectId (unique 12 bytes ID)
          type: string
        automaticRefillAmount:
          default: 0
          format: int32
          type: integer
        lowBalanceAlertAmount:
          default: 0
          format: int32
          type: integer
        lowBalanceAlertAt:
          format: date-time
          type: string
        lowBalanceAlertCount:
          default: 0
          format: int32
          type: integer
        lastAutomaticRefillInvoice:
          description: ObjectId (unique 12 bytes ID)
          type: string
        internationalCalling:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        createdByIP:
          maxLength: 45
          minLength: 8
          type: string
        callDebug:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        mediaBypass:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        accountLock:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        callRecording:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        cdrRetention:
          default: 12
          format: int32
          type: integer
        cnamLookUps:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        holdMusic:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        transcribeCalls:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        maxOutboundCallRate:
          default: 1
          format: int32
          type: integer
        defaultBillMethod:
          default: credit
          enum:
          - credit
          - paymentmethod
          type: string
      required:
      - defaultBillMethod
      - name
      type: object
    developerapps:
      example:
        webhookPassword: webhookPassword
        termsOfServiceUrl: termsOfServiceUrl
        visibility: private
        description: description
        services:
        - calendarevents
        - calendarevents
        type: events
        webhookTokenName: webhookTokenName
        privacyPolicyUrl: privacyPolicyUrl
        webhookUrl: webhookUrl
        feeDescription: feeDescription
        integrationType: webhook
        requireId: 5
        isFree: 5
        permissions: "{}"
        name: name
        webhookToken: webhookToken
        user: user
        events:
        - create
        - create
        webhookAuthType: header
        status: pending
        webhookUsername: webhookUsername
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        description:
          maxLength: 4096
          type: string
        type:
          enum:
          - events
          type: string
        visibility:
          enum:
          - private
          - public
          type: string
        requireId:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        isFree:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        feeDescription:
          maxLength: 4096
          type: string
        integrationType:
          enum:
          - webhook
          - client
          type: string
        services:
          items:
            enum:
            - calendarevents
            - callqueues
            - cdrs
            - chatmessages
            - contacts
            - conversationmessages
            - faxes
            - firewall
            - users
            - voicemail
            type: string
          type: array
        events:
          items:
            enum:
            - create
            - patch
            - removed
            type: string
          type: array
        user:
          description: ObjectId (unique 12 bytes ID)
          type: string
        webhookUrl:
          maxLength: 1024
          type: string
        termsOfServiceUrl:
          maxLength: 1024
          type: string
        privacyPolicyUrl:
          maxLength: 1024
          type: string
        permissions:
          default: {}
          type: object
        status:
          default: pending
          enum:
          - active
          - disabled
          - suspended
          - error
          - pending
          type: string
        webhookAuthType:
          enum:
          - header
          - usernameAndPassword
          type: string
        webhookUsername:
          maxLength: 255
          type: string
        webhookPassword:
          maxLength: 255
          type: string
        webhookTokenName:
          maxLength: 255
          type: string
        webhookToken:
          maxLength: 255
          type: string
      required:
      - integrationType
      - name
      - services
      - status
      - type
      - user
      - visibility
      type: object
    developerappsubscriptions:
      example:
        ref: ref
        requireId: 5
        permissions: "{}"
        developerApp: developerApp
        services:
        - calendarevents
        - calendarevents
        events:
        - create
        - create
        object: object
      minProperties: 1
      properties:
        developerApp:
          description: ObjectId (unique 12 bytes ID)
          type: string
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 45
          type: string
        permissions:
          default: {}
          type: object
        requireId:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        services:
          items:
            enum:
            - calendarevents
            - callqueues
            - cdrs
            - chatmessages
            - contacts
            - conversationmessages
            - faxes
            - firewall
            - users
            - voicemail
            type: string
          type: array
        events:
          items:
            enum:
            - create
            - patch
            - removed
            type: string
          type: array
      required:
      - developerApp
      - services
      type: object
    directories:
      example:
        name: name
        groups:
        - groups
        - groups
        type: customers
        announcement: announcement
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        type:
          enum:
          - customers
          - groups
          type: string
        groups:
          items:
            description: ObjectId (unique 12 bytes ID)
            type: string
          type: array
        announcement:
          description: ObjectId (unique 12 bytes ID)
          type: string
      required:
      - name
      - type
      type: object
    domains:
      example:
        name: name
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 255
          minLength: 2
          type: string
        status:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
      required:
      - name
      type: object
    faxes:
      example:
        callerIdNumber: callerIdNumber
        transferedPages: 2
        error: error
        type: send
        number: number
        retries: 7
        senderName: senderName
        pages: 5
        file: file
        callerDestination: callerDestination
        contact: contact
        senderEmail: senderEmail
        faxAccount: faxAccount
        invoice: invoice
        statusCode: 5
        status: processing
        order: order
      minProperties: 1
      properties:
        callerIdNumber:
          maxLength: 45
          type: string
        callerDestination:
          maxLength: 45
          type: string
        pages:
          default: 0
          format: int32
          type: integer
        statusCode:
          format: int32
          type: integer
        transferedPages:
          default: 0
          format: int32
          type: integer
        status:
          default: processing
          enum:
          - failed
          - success
          - processing
          type: string
        error:
          maxLength: 255
          type: string
        type:
          enum:
          - send
          - receive
          type: string
        order:
          description: ObjectId (unique 12 bytes ID)
          type: string
        file:
          description: ObjectId (unique 12 bytes ID)
          type: string
        contact:
          description: ObjectId (unique 12 bytes ID)
          type: string
        number:
          description: ObjectId (unique 12 bytes ID)
          type: string
        faxAccount:
          description: ObjectId (unique 12 bytes ID)
          type: string
        retries:
          default: 0
          format: int32
          type: integer
        invoice:
          description: ObjectId (unique 12 bytes ID)
          type: string
        senderEmail:
          maxLength: 45
          type: string
        senderName:
          maxLength: 45
          type: string
      required:
      - callerDestination
      - callerIdNumber
      - faxAccount
      - number
      - status
      - type
      type: object
    faxaccounts:
      example:
        number: number
        inboundNotification: inboundNotification
        name: name
        outboundNotification: outboundNotification
        order: order
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        order:
          description: ObjectId (unique 12 bytes ID)
          type: string
        inboundNotification:
          description: ObjectId (unique 12 bytes ID)
          type: string
        outboundNotification:
          description: ObjectId (unique 12 bytes ID)
          type: string
        number:
          description: ObjectId (unique 12 bytes ID)
          type: string
      required:
      - name
      type: object
    firewall:
      example:
        hits: 5
        notificationHits: 9
        param: param
        name: name
        ai: 2
        description: description
        priority: 5
        type: allow
        target: numbers
        direction: inbound
        status: 7
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        description:
          maxLength: 255
          type: string
        priority:
          format: int32
          type: integer
        type:
          enum:
          - allow
          - deny
          type: string
        target:
          enum:
          - numbers
          - ipaddresses
          - sms
          type: string
        direction:
          enum:
          - inbound
          - outbound
          - both
          type: string
        param:
          maxLength: 45
          minLength: 1
          type: string
        hits:
          format: int32
          type: integer
        ai:
          default: 0
          enum:
          - 0
          - 1
          format: int32
          type: integer
        status:
          default: 1
          enum:
          - 0
          - 1
          format: int32
          type: integer
        notificationHits:
          default: 1
          format: int32
          type: integer
      required:
      - name
      - param
      - priority
      - target
      - type
      type: object
    groups:
      example:
        name: name
        description: description
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        description:
          maxLength: 255
          type: string
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
      required:
      - name
      type: object
    groupmembers:
      example:
        ref: users
        priority: 5
        group: group
        object: object
      minProperties: 1
      properties:
        group:
          description: ObjectId (unique 12 bytes ID)
          type: string
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
        priority:
          format: int32
          type: integer
        ref:
          enum:
          - users
          - servers
          - ipaddresses
          type: string
      required:
      - group
      - object
      - ref
      type: object
    holidays:
      example:
        objectRef: objectRef
        ref: ref
        callForwardingDestination: callForwardingDestination
        name: name
        dateTimeRanges:
        - - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
        - - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
        destination: destination
        destinationType: announcements
        object: object
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
        objectRef:
          maxLength: 45
          minLength: 2
          type: string
        dateTimeRanges:
          items:
            items:
              format: date-time
              type: string
            type: array
          type: array
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        destinationType:
          enum:
          - announcements
          - directories
          - park
          - numbers
          - menus
          - users
          - servers
          - inboundrules
          - callqueues
          - faxaccounts
          - callforwarding
          - hangup
          - phoneinboundrules
          - voicemailaccounts
          type: string
        destination:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        callForwardingDestination:
          maxLength: 45
          minLength: 10
          type: string
      required:
      - dateTimeRanges
      - destinationType
      - name
      - object
      - objectRef
      type: object
    invoiceitems:
      example:
        amount: 5
        ref: ref
        quantity: 7
        name: name
        setup: 5
        taxes: 2
        invoice: invoice
        object: object
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        amount:
          format: int32
          type: integer
        setup:
          format: int32
          type: integer
        taxes:
          format: int32
          type: integer
        quantity:
          default: 1
          format: int32
          type: integer
        invoice:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
      required:
      - amount
      - invoice
      - name
      - quantity
      type: object
    invoices:
      example:
        dueAt: 2000-01-23T04:56:07.000+00:00
        amount: 5
        subtotal: 5
        setup: 7
        discount: 9
        tax: 2
        closedAt: 2000-01-23T04:56:07.000+00:00
        error: error
        status: open
      minProperties: 1
      properties:
        amount:
          format: int32
          type: integer
        subtotal:
          format: int32
          type: integer
        tax:
          format: int32
          type: integer
        setup:
          format: int32
          type: integer
        discount:
          format: int32
          type: integer
        closedAt:
          format: date-time
          type: string
        dueAt:
          format: date-time
          type: string
        status:
          default: open
          enum:
          - open
          - closed
          - collection
          - onHold
          - error
          type: string
        error:
          type: string
      required:
      - amount
      - dueAt
      - status
      - subtotal
      type: object
    licenses:
      example:
        ref: ref
        field: field
        order: order
        object: object
      minProperties: 1
      properties:
        order:
          description: ObjectId (unique 12 bytes ID)
          type: string
        object:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 45
          type: string
        field:
          maxLength: 45
          type: string
      required:
      - object
      - order
      - ref
      type: object
    menus:
      example:
        maxExtensionLength: 5
        maxFailures: 2
        exitSound: default
        speechRecognition: 5
        destination: destination
        maxTimeouts: 7
        directory: directory
        menuVoice: menuVoice
        timeout: 9
        ref: ref
        timeschedule: timeschedule
        callForwardingDestination: callForwardingDestination
        touchToneTerminators: 3
        greetingTTS: greetingTTS
        name: name
        destinationType: announcements
        greetingType: tts
        transferAnnouncement: default
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        maxExtensionLength:
          default: 4
          format: int32
          type: integer
        speechRecognition:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        directory:
          description: ObjectId (unique 12 bytes ID)
          type: string
        greetingType:
          enum:
          - tts
          - mp3
          type: string
        greetingTTS:
          type: string
        menuVoice:
          type: string
        exitSound:
          default: default
          enum:
          - default
          - mp3
          type: string
        transferAnnouncement:
          default: default
          enum:
          - default
          - mp3
          - none
          type: string
        maxFailures:
          default: 3
          format: int32
          type: integer
        maxTimeouts:
          default: 3
          format: int32
          type: integer
        timeout:
          default: 10
          format: int32
          type: integer
        touchToneTerminators:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        timeschedule:
          description: ObjectId (unique 12 bytes ID)
          type: string
        destinationType:
          enum:
          - announcements
          - directories
          - park
          - numbers
          - menus
          - users
          - servers
          - inboundrules
          - callqueues
          - faxaccounts
          - callforwarding
          - hangup
          - phoneinboundrules
          - voicemailaccounts
          type: string
        destination:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        callForwardingDestination:
          maxLength: 45
          minLength: 10
          type: string
      required:
      - greetingType
      - maxExtensionLength
      - name
      type: object
    menuoptions:
      example:
        ref: ref
        callForwardingDestination: callForwardingDestination
        name: name
        destination: destination
        destinationType: announcements
        menus: ""
        digit: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        digit:
          format: int32
          type: integer
        menus: {}
        destinationType:
          enum:
          - announcements
          - directories
          - park
          - numbers
          - menus
          - users
          - servers
          - inboundrules
          - callqueues
          - faxaccounts
          - callforwarding
          - hangup
          - phoneinboundrules
          - voicemailaccounts
          type: string
        destination:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        callForwardingDestination:
          maxLength: 45
          minLength: 10
          type: string
      required:
      - destinationType
      - digit
      - menus
      - name
      type: object
    messagecampaigns:
      example:
        sample1: sample1
        campaignId: campaignId
        directLending: 9
        subscriberHelp: 2
        subscriberOptin: 5
        affiliateMarketing: 4
        sample5: sample5
        sample4: sample4
        referenceId: referenceId
        sample3: sample3
        sample2: sample2
        embeddedLink: 3
        useCase: useCase
        mnos: "{}"
        brandId: brandId
        name: name
        subscriberOptout: 5
        ageGated: 7
        embeddedPhone: 2
        numberPool: 7
        subUseCases:
        - ""
        - ""
        order: order
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        campaignId:
          maxLength: 45
          type: string
        brandId:
          maxLength: 45
          type: string
        order:
          description: ObjectId (unique 12 bytes ID)
          type: string
        subscriberOptin:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        subscriberOptout:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        subscriberHelp:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        numberPool:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        directLending:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        embeddedLink:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        embeddedPhone:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        affiliateMarketing:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        ageGated:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        mnos:
          type: object
        referenceId:
          maxLength: 45
          type: string
        useCase:
          maxLength: 45
          type: string
        subUseCases:
          items: {}
          type: array
        sample1:
          maxLength: 255
          type: string
        sample2:
          maxLength: 255
          type: string
        sample3:
          maxLength: 255
          type: string
        sample4:
          maxLength: 255
          type: string
        sample5:
          maxLength: 255
          type: string
      required:
      - brandId
      - name
      - order
      type: object
    messagebrands:
      example:
        entityType: entityType
        vertical: vertical
        ein: ein
        referenceId: referenceId
        cspId: cspId
        brandRelationship: brandRelationship
        brandId: brandId
        einIssuingCountry: einIssuingCountry
        name: name
        universalEin: universalEin
        user: user
        order: order
        status: verified
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        brandId:
          maxLength: 45
          type: string
        ein:
          maxLength: 20
          type: string
        user:
          description: ObjectId (unique 12 bytes ID)
          type: string
        order:
          description: ObjectId (unique 12 bytes ID)
          type: string
        status:
          enum:
          - verified
          - unverified
          type: string
        brandRelationship:
          maxLength: 45
          type: string
        vertical:
          maxLength: 45
          type: string
        entityType:
          maxLength: 45
          type: string
        cspId:
          maxLength: 45
          type: string
        einIssuingCountry:
          maxLength: 2
          type: string
        universalEin:
          maxLength: 45
          type: string
        referenceId:
          maxLength: 45
          type: string
      required:
      - ein
      - name
      - order
      - user
      type: object
    numbers:
      example:
        voice: 9
        directoryListingOrderDate: 2000-01-23T04:56:07.000+00:00
        directoryListing: directoryListing
        destination: destination
        changeRegionOrderDate: 2000-01-23T04:56:07.000+00:00
        callerName: callerName
        e911OrderDate: 2000-01-23T04:56:07.000+00:00
        mms: 4
        ref: ref
        messageCampaignOrderId: messageCampaignOrderId
        callerNameSupported: 1
        callForwardingDestination: callForwardingDestination
        originalProvider: originalProvider
        messageType: SMS
        provider: provider
        callerNameOrderId: callerNameOrderId
        countryCode: countryCode
        inUse: 5
        sms: 2
        e911OrderId: e911OrderId
        destinationType: park
        perMinuteRate: 2
        directoryListingOrderId: directoryListingOrderId
        fax: 7
        callerNameOrderDate: 2000-01-23T04:56:07.000+00:00
        directoryListingSupported: 1
        amount: 5
        e911Supported: 7
        providerOrderId: providerOrderId
        messagingSupported: 1
        messageCampaignOrderDate: 2000-01-23T04:56:07.000+00:00
        name: name
        messageClass: P2P
        changeRegionOrderId: changeRegionOrderId
        e911: e911
        messageCampaign: messageCampaign
        status: 3
      minProperties: 1
      properties:
        inUse:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        name:
          maxLength: 20
          minLength: 10
          type: string
        countryCode:
          maxLength: 4
          minLength: 1
          type: string
        amount:
          format: int32
          type: integer
        perMinuteRate:
          format: int32
          type: integer
        provider:
          description: ObjectId (unique 12 bytes ID)
          type: string
        originalProvider:
          description: ObjectId (unique 12 bytes ID)
          type: string
        providerOrderId:
          maxLength: 45
          type: string
        fax:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        voice:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        sms:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        mms:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        changeRegionOrderId:
          maxLength: 45
          minLength: 5
          type: string
        changeRegionOrderDate:
          format: date-time
          type: string
        directoryListing:
          description: ObjectId (unique 12 bytes ID)
          type: string
        directoryListingOrderId:
          maxLength: 45
          minLength: 5
          type: string
        directoryListingOrderDate:
          format: date-time
          type: string
        callerName:
          maxLength: 45
          type: string
        callerNameOrderId:
          maxLength: 45
          type: string
        callerNameOrderDate:
          format: date-time
          type: string
        e911:
          description: ObjectId (unique 12 bytes ID)
          type: string
        e911OrderId:
          maxLength: 45
          minLength: 5
          type: string
        e911OrderDate:
          format: date-time
          type: string
        messageCampaign:
          description: ObjectId (unique 12 bytes ID)
          maxLength: 45
          type: string
        messageClass:
          enum:
          - P2P
          - A2PLC
          - A2P8XX
          type: string
        messageType:
          enum:
          - SMS
          - MMS
          - SMSMMS
          - SMS_ALT
          - MMS_ALT
          - SMSMMS_ALT
          type: string
        messageCampaignOrderId:
          maxLength: 45
          type: string
        messageCampaignOrderDate:
          format: date-time
          type: string
        e911Supported:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        callerNameSupported:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        directoryListingSupported:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        messagingSupported:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        destinationType:
          default: park
          enum:
          - announcements
          - directories
          - park
          - numbers
          - menus
          - users
          - servers
          - inboundrules
          - callqueues
          - faxaccounts
          - callforwarding
          - hangup
          - phoneinboundrules
          - voicemailaccounts
          type: string
        destination:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        callForwardingDestination:
          maxLength: 45
          minLength: 10
          type: string
      required:
      - countryCode
      - destinationType
      - name
      - provider
      type: object
    numberports:
      example:
        destination: destination
        office: office
        type: port in
        accountNumber: accountNumber
        accountPhoneNumber: accountPhoneNumber
        ref: ref
        callForwardingDestination: callForwardingDestination
        typeOfService: business
        name: name
        destinationType: announcements
        e911: 5
        invoice: invoice
        authorizedPerson: authorizedPerson
        desiredDueDate: 2000-01-23T04:56:07.000+00:00
        status: processing
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        type:
          enum:
          - port in
          - port out
          type: string
        typeOfService:
          enum:
          - business
          - residence
          type: string
        authorizedPerson:
          maxLength: 45
          type: string
        desiredDueDate:
          format: date-time
          type: string
        accountNumber:
          maxLength: 45
          type: string
        accountPhoneNumber:
          maxLength: 20
          minLength: 10
          type: string
        office:
          description: ObjectId (unique 12 bytes ID)
          type: string
        e911:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        invoice:
          description: ObjectId (unique 12 bytes ID)
          type: string
        status:
          default: processing
          enum:
          - processing
          - failed
          - error
          - completed
          type: string
        destinationType:
          enum:
          - announcements
          - directories
          - park
          - numbers
          - menus
          - users
          - servers
          - inboundrules
          - callqueues
          - faxaccounts
          - callforwarding
          - hangup
          - phoneinboundrules
          - voicemailaccounts
          type: string
        destination:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        callForwardingDestination:
          maxLength: 45
          minLength: 10
          type: string
      required:
      - accountNumber
      - accountPhoneNumber
      - authorizedPerson
      - desiredDueDate
      - destinationType
      - invoice
      - name
      - office
      - status
      - type
      - typeOfService
      type: object
    offices:
      example:
        zip: zip
        zipCode: zipCode
        country: country
        streetNumber: streetNumber
        city: city
        address2: address2
        preDirection: preDirection
        streetName: streetName
        name: name
        streetSuffix: streetSuffix
        state: state
        region: region
        providers: "{}"
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        streetNumber:
          maxLength: 45
          type: string
        streetName:
          maxLength: 20
          type: string
        preDirection:
          maxLength: 2
          type: string
        streetSuffix:
          maxLength: 4
          minLength: 2
          type: string
        city:
          maxLength: 45
          type: string
        state:
          maxLength: 45
          type: string
        zip:
          description: ObjectId (unique 12 bytes ID)
          type: string
        zipCode:
          maxLength: 45
          type: string
        address2:
          maxLength: 45
          type: string
        country:
          maxLength: 2
          minLength: 2
          type: string
        providers:
          type: object
        region:
          description: ObjectId (unique 12 bytes ID)
          type: string
      required:
      - city
      - country
      - name
      - streetName
      - streetNumber
      - streetSuffix
      type: object
    phoneinboundrules:
      example:
        name: name
        description: description
        outboundCallerId: outboundCallerId
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        description:
          maxLength: 255
          type: string
        outboundCallerId:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    phoneoutboundrules:
      example:
        name: name
        description: description
        outboundCallerId: outboundCallerId
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        description:
          maxLength: 255
          type: string
        status:
          default: 1
          enum:
          - 0
          - 1
          format: int32
          type: integer
        outboundCallerId:
          maxLength: 45
          type: string
      required:
      - name
      type: object
    phoneinboundruleactions:
      example:
        phoneinboundrule: phoneinboundrule
        ref: ref
        timeschedule: timeschedule
        callForwardingDestination: callForwardingDestination
        name: name
        destination: destination
        destinationType: announcements
        priority: 2
        timeout: 5
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        phoneinboundrule:
          description: ObjectId (unique 12 bytes ID)
          type: string
        timeschedule:
          description: ObjectId (unique 12 bytes ID)
          type: string
        timeout:
          format: int32
          type: integer
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        priority:
          default: 1
          format: int32
          type: integer
        destinationType:
          enum:
          - announcements
          - directories
          - park
          - numbers
          - menus
          - users
          - servers
          - inboundrules
          - callqueues
          - faxaccounts
          - callforwarding
          - hangup
          - phoneinboundrules
          - voicemailaccounts
          type: string
        destination:
          description: ObjectId (unique 12 bytes ID)
          type: string
        ref:
          maxLength: 100
          minLength: 5
          type: string
        callForwardingDestination:
          maxLength: 45
          minLength: 10
          type: string
      required:
      - destinationType
      - name
      - phoneinboundrule
      - priority
      type: object
    phoneoutboundruleactions:
      example:
        appendChars: appendChars
        rangeStart: 7
        length: 2
        priority: 5
        prependChars: prependChars
        removeEndingChars: 2
        rangeEnd: 9
        removeStartingChars: 3
        contains: contains
        lengthType: atleast
        route: default
        routingType: priority
        name: name
        phoneoutboundrule: phoneoutboundrule
        startingChars: startingChars
        group: group
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        group:
          description: ObjectId (unique 12 bytes ID)
          type: string
        phoneoutboundrule:
          description: ObjectId (unique 12 bytes ID)
          type: string
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
        priority:
          default: 1
          format: int32
          type: integer
        startingChars:
          maxLength: 20
          type: string
        contains:
          maxLength: 20
          type: string
        lengthType:
          enum:
          - atleast
          - exactly
          - range
          - any
          nullable: true
          type: string
        length:
          format: int32
          type: integer
        appendChars:
          maxLength: 20
          type: string
        prependChars:
          maxLength: 20
          type: string
        rangeStart:
          format: int32
          type: integer
        rangeEnd:
          format: int32
          type: integer
        removeStartingChars:
          format: int32
          type: integer
        removeEndingChars:
          format: int32
          type: integer
        route:
          default: default
          enum:
          - default
          - group
          - pstn
          type: string
        routingType:
          enum:
          - priority
          - lb
          - simultaneous
          type: string
      required:
      - name
      - phoneoutboundrule
      - priority
      - route
      type: object
    ratecenters:
      example:
        lata: lata
        locState: locState
        rcAbbre: rcAbbre
        npa: npa
        nxx: nxx
      minProperties: 1
      properties:
        npa:
          maxLength: 3
          minLength: 3
          type: string
        nxx:
          maxLength: 3
          minLength: 3
          type: string
        lata:
          maxLength: 3
          minLength: 3
          type: string
        locState:
          maxLength: 2
          minLength: 2
          type: string
        rcAbbre:
          maxLength: 45
          type: string
      required:
      - lata
      - locState
      - npa
      - nxx
      - rcAbbre
      type: object
    servers:
      example:
        domesticOutboundCallLimit: 5
        tollFreeChannelLimit: 9
        bypassMedia: 2
        noInstantRingBack: 3
        type: sip
        disableRTPAutoAdjust: 4
        outboundSipTrunkingOrder: outboundSipTrunkingOrder
        port: 5
        internationalOutboundCallLimit: 7
        name: name
        host: host
        inboundSipTrunkingOrder: inboundSipTrunkingOrder
        callerId: callerId
        domesticInboundCallLimit: 2
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        host:
          maxLength: 45
          minLength: 5
          type: string
        port:
          default: 5060
          format: int32
          type: integer
        callerId:
          maxLength: 45
          type: string
        type:
          enum:
          - sip
          - skype
          type: string
        domesticOutboundCallLimit:
          default: 10
          format: int32
          type: integer
        domesticInboundCallLimit:
          default: 10
          format: int32
          type: integer
        internationalOutboundCallLimit:
          default: 10
          format: int32
          type: integer
        tollFreeChannelLimit:
          default: 10
          format: int32
          type: integer
        inboundSipTrunkingOrder:
          description: ObjectId (unique 12 bytes ID)
          type: string
        outboundSipTrunkingOrder:
          description: ObjectId (unique 12 bytes ID)
          type: string
        noInstantRingBack:
          enum:
          - 1
          - 0
          format: int32
          type: integer
        bypassMedia:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        disableRTPAutoAdjust:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
      required:
      - domesticInboundCallLimit
      - domesticOutboundCallLimit
      - host
      - internationalOutboundCallLimit
      - name
      - port
      - tollFreeChannelLimit
      - type
      type: object
    timeschedules:
      example:
        sunday: "{}"
        saturday: "{}"
        tuesday: "{}"
        timezone: America/New_York
        name: name
        wednesday: "{}"
        thursday: "{}"
        friday: "{}"
        monday: "{}"
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        timezone:
          default: America/New_York
          enum:
          - Europe/Andorra
          - Asia/Dubai
          - Asia/Kabul
          - Europe/Tirane
          - Asia/Yerevan
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Mawson
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - America/Argentina/Buenos_Aires
          - America/Argentina/Cordoba
          - America/Argentina/Salta
          - America/Argentina/Jujuy
          - America/Argentina/Tucuman
          - America/Argentina/Catamarca
          - America/Argentina/La_Rioja
          - America/Argentina/San_Juan
          - America/Argentina/Mendoza
          - America/Argentina/San_Luis
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Ushuaia
          - Pacific/Pago_Pago
          - Europe/Vienna
          - Australia/Lord_Howe
          - Antarctica/Macquarie
          - Australia/Hobart
          - Australia/Currie
          - Australia/Melbourne
          - Australia/Sydney
          - Australia/Broken_Hill
          - Australia/Brisbane
          - Australia/Lindeman
          - Australia/Adelaide
          - Australia/Darwin
          - Australia/Perth
          - Australia/Eucla
          - Asia/Baku
          - America/Barbados
          - Asia/Dhaka
          - Europe/Brussels
          - Europe/Sofia
          - Atlantic/Bermuda
          - Asia/Brunei
          - America/La_Paz
          - America/Noronha
          - America/Belem
          - America/Fortaleza
          - America/Recife
          - America/Araguaina
          - America/Maceio
          - America/Bahia
          - America/Sao_Paulo
          - America/Campo_Grande
          - America/Cuiaba
          - America/Santarem
          - America/Porto_Velho
          - America/Boa_Vista
          - America/Manaus
          - America/Eirunepe
          - America/Rio_Branco
          - America/Nassau
          - Asia/Thimphu
          - Europe/Minsk
          - America/Belize
          - America/St_Johns
          - America/Halifax
          - America/Glace_Bay
          - America/Moncton
          - America/Goose_Bay
          - America/Blanc-Sablon
          - America/Toronto
          - America/Nipigon
          - America/Thunder_Bay
          - America/Iqaluit
          - America/Pangnirtung
          - America/Atikokan
          - America/Winnipeg
          - America/Rainy_River
          - America/Resolute
          - America/Rankin_Inlet
          - America/Regina
          - America/Swift_Current
          - America/Edmonton
          - America/Cambridge_Bay
          - America/Yellowknife
          - America/Inuvik
          - America/Creston
          - America/Dawson_Creek
          - America/Fort_Nelson
          - America/Vancouver
          - America/Whitehorse
          - America/Dawson
          - Indian/Cocos
          - Europe/Zurich
          - Africa/Abidjan
          - Pacific/Rarotonga
          - America/Santiago
          - America/Punta_Arenas
          - Pacific/Easter
          - Asia/Shanghai
          - Asia/Urumqi
          - America/Bogota
          - America/Costa_Rica
          - America/Havana
          - Atlantic/Cape_Verde
          - America/Curacao
          - Indian/Christmas
          - Asia/Nicosia
          - Asia/Famagusta
          - Europe/Prague
          - Europe/Berlin
          - Europe/Copenhagen
          - America/Santo_Domingo
          - Africa/Algiers
          - America/Guayaquil
          - Pacific/Galapagos
          - Europe/Tallinn
          - Africa/Cairo
          - Africa/El_Aaiun
          - Europe/Madrid
          - Africa/Ceuta
          - Atlantic/Canary
          - Europe/Helsinki
          - Pacific/Fiji
          - Atlantic/Stanley
          - Pacific/Chuuk
          - Pacific/Pohnpei
          - Pacific/Kosrae
          - Atlantic/Faroe
          - Europe/Paris
          - Europe/London
          - Asia/Tbilisi
          - America/Cayenne
          - Africa/Accra
          - Europe/Gibraltar
          - America/Godthab
          - America/Danmarkshavn
          - America/Scoresbysund
          - America/Thule
          - Europe/Athens
          - Atlantic/South_Georgia
          - America/Guatemala
          - Pacific/Guam
          - Africa/Bissau
          - America/Guyana
          - Asia/Hong_Kong
          - America/Tegucigalpa
          - America/Port-au-Prince
          - Europe/Budapest
          - Asia/Jakarta
          - Asia/Pontianak
          - Asia/Makassar
          - Asia/Jayapura
          - Europe/Dublin
          - Asia/Jerusalem
          - Asia/Kolkata
          - Indian/Chagos
          - Asia/Baghdad
          - Asia/Tehran
          - Atlantic/Reykjavik
          - Europe/Rome
          - America/Jamaica
          - Asia/Amman
          - Asia/Tokyo
          - Africa/Nairobi
          - Asia/Bishkek
          - Pacific/Tarawa
          - Pacific/Enderbury
          - Pacific/Kiritimati
          - Asia/Pyongyang
          - Asia/Seoul
          - Asia/Almaty
          - Asia/Qyzylorda
          - Asia/Qostanay
          - Asia/Aqtobe
          - Asia/Aqtau
          - Asia/Atyrau
          - Asia/Oral
          - Asia/Beirut
          - Asia/Colombo
          - Africa/Monrovia
          - Europe/Vilnius
          - Europe/Luxembourg
          - Europe/Riga
          - Africa/Tripoli
          - Africa/Casablanca
          - Europe/Monaco
          - Europe/Chisinau
          - Pacific/Majuro
          - Pacific/Kwajalein
          - Asia/Yangon
          - Asia/Ulaanbaatar
          - Asia/Hovd
          - Asia/Choibalsan
          - Asia/Macau
          - America/Martinique
          - Europe/Malta
          - Indian/Mauritius
          - Indian/Maldives
          - America/Mexico_City
          - America/Cancun
          - America/Merida
          - America/Monterrey
          - America/Matamoros
          - America/Mazatlan
          - America/Chihuahua
          - America/Ojinaga
          - America/Hermosillo
          - America/Tijuana
          - America/Bahia_Banderas
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Africa/Maputo
          - Africa/Windhoek
          - Pacific/Noumea
          - Pacific/Norfolk
          - Africa/Lagos
          - America/Managua
          - Europe/Amsterdam
          - Europe/Oslo
          - Asia/Kathmandu
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Auckland
          - Pacific/Chatham
          - America/Panama
          - America/Lima
          - Pacific/Tahiti
          - Pacific/Marquesas
          - Pacific/Gambier
          - Pacific/Port_Moresby
          - Pacific/Bougainville
          - Asia/Manila
          - Asia/Karachi
          - Europe/Warsaw
          - America/Miquelon
          - Pacific/Pitcairn
          - America/Puerto_Rico
          - Asia/Gaza
          - Asia/Hebron
          - Europe/Lisbon
          - Atlantic/Madeira
          - Atlantic/Azores
          - Pacific/Palau
          - America/Asuncion
          - Asia/Qatar
          - Indian/Reunion
          - Europe/Bucharest
          - Europe/Belgrade
          - Europe/Kaliningrad
          - Europe/Moscow
          - Europe/Simferopol
          - Europe/Kirov
          - Europe/Astrakhan
          - Europe/Volgograd
          - Europe/Saratov
          - Europe/Ulyanovsk
          - Europe/Samara
          - Asia/Yekaterinburg
          - Asia/Omsk
          - Asia/Novosibirsk
          - Asia/Barnaul
          - Asia/Tomsk
          - Asia/Novokuznetsk
          - Asia/Krasnoyarsk
          - Asia/Irkutsk
          - Asia/Chita
          - Asia/Yakutsk
          - Asia/Khandyga
          - Asia/Vladivostok
          - Asia/Ust-Nera
          - Asia/Magadan
          - Asia/Sakhalin
          - Asia/Srednekolymsk
          - Asia/Kamchatka
          - Asia/Anadyr
          - Asia/Riyadh
          - Pacific/Guadalcanal
          - Indian/Mahe
          - Africa/Khartoum
          - Europe/Stockholm
          - Asia/Singapore
          - America/Paramaribo
          - Africa/Juba
          - Africa/Sao_Tome
          - America/El_Salvador
          - Asia/Damascus
          - America/Grand_Turk
          - Africa/Ndjamena
          - Indian/Kerguelen
          - Asia/Bangkok
          - Asia/Dushanbe
          - Pacific/Fakaofo
          - Asia/Dili
          - Asia/Ashgabat
          - Africa/Tunis
          - Pacific/Tongatapu
          - Europe/Istanbul
          - America/Port_of_Spain
          - Pacific/Funafuti
          - Asia/Taipei
          - Europe/Kiev
          - Europe/Uzhgorod
          - Europe/Zaporozhye
          - Pacific/Wake
          - America/New_York
          - America/Detroit
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Indiana/Indianapolis
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Vevay
          - America/Chicago
          - America/Indiana/Tell_City
          - America/Indiana/Knox
          - America/Menominee
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/North_Dakota/Beulah
          - America/Denver
          - America/Boise
          - America/Phoenix
          - America/Los_Angeles
          - America/Anchorage
          - America/Juneau
          - America/Sitka
          - America/Metlakatla
          - America/Yakutat
          - America/Nome
          - America/Adak
          - Pacific/Honolulu
          - America/Montevideo
          - Asia/Samarkand
          - Asia/Tashkent
          - America/Caracas
          - Asia/Ho_Chi_Minh
          - Pacific/Efate
          - Pacific/Wallis
          - Pacific/Apia
          - Africa/Johannesburg
          maxLength: 45
          type: string
        sunday:
          type: object
        monday:
          type: object
        tuesday:
          type: object
        wednesday:
          type: object
        thursday:
          type: object
        friday:
          type: object
        saturday:
          type: object
      required:
      - friday
      - monday
      - name
      - saturday
      - sunday
      - thursday
      - timezone
      - tuesday
      - wednesday
      type: object
    users:
      example:
        extension: 5
        callerIdNumber: callerIdNumber
        timezone: America/New_York
        jobTitle: jobTitle
        language: en
        office: office
        number: number
        password: password
        mediaServerPermission: r
        pin: 9
        isPrimary: 2
        adminPermission: r
        superAdminPermission: r
        department: department
        vmTranscription: 3
        communication: "{}"
        email: email
        billingPermission: r
        last: last
        sipPassword: sipPassword
        vmPlaybackNumber: vmPlaybackNumber
        mailServerPermission: r
        avatar: avatar
        agilePermission: r
        vmFile: vmFile
        jobServerPermission: r
        phonePermission: r
        vmGreetingType: default
        mobilePhone: mobilePhone
        vmTimeout: 7
        businessPhone: businessPhone
        turnPassword: turnPassword
        region: region
        first: first
        customCallerId: 5
        status: active
      minProperties: 1
      properties:
        email:
          maxLength: 255
          minLength: 5
          type: string
        password:
          maxLength: 255
          minLength: 8
          type: string
        sipPassword:
          maxLength: 45
          minLength: 8
          type: string
        turnPassword:
          maxLength: 45
          minLength: 8
          type: string
        first:
          maxLength: 45
          type: string
        last:
          maxLength: 45
          type: string
        mobilePhone:
          maxLength: 20
          type: string
        businessPhone:
          maxLength: 20
          minLength: 7
          type: string
        extension:
          format: int32
          type: integer
        customCallerId:
          format: int32
          type: integer
        jobTitle:
          maxLength: 45
          type: string
        department:
          maxLength: 45
          type: string
        office:
          description: ObjectId (unique 12 bytes ID)
          type: string
        avatar:
          maxLength: 255
          type: string
        language:
          default: en
          enum:
          - fr
          - en
          - ja
          - de
          - es
          maxLength: 5
          type: string
        isPrimary:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        status:
          default: active
          enum:
          - active
          - disabled
          - terminated
          type: string
        vmGreetingType:
          default: default
          enum:
          - default
          - mp3
          - number
          type: string
        vmTimeout:
          default: 20
          format: int32
          type: integer
        vmFile:
          description: ObjectId (unique 12 bytes ID)
          type: string
        vmPlaybackNumber:
          maxLength: 20
          type: string
        pin:
          default: 1234
          format: int32
          type: integer
        number:
          description: ObjectId (unique 12 bytes ID)
          type: string
        region:
          description: ObjectId (unique 12 bytes ID)
          type: string
        callerIdNumber:
          maxLength: 20
          type: string
        adminPermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        billingPermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        phonePermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        agilePermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        jobServerPermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        mediaServerPermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        mailServerPermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        superAdminPermission:
          enum:
          - r
          - rw
          nullable: true
          type: string
        timezone:
          default: America/New_York
          enum:
          - Europe/Andorra
          - Asia/Dubai
          - Asia/Kabul
          - Europe/Tirane
          - Asia/Yerevan
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Mawson
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - America/Argentina/Buenos_Aires
          - America/Argentina/Cordoba
          - America/Argentina/Salta
          - America/Argentina/Jujuy
          - America/Argentina/Tucuman
          - America/Argentina/Catamarca
          - America/Argentina/La_Rioja
          - America/Argentina/San_Juan
          - America/Argentina/Mendoza
          - America/Argentina/San_Luis
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Ushuaia
          - Pacific/Pago_Pago
          - Europe/Vienna
          - Australia/Lord_Howe
          - Antarctica/Macquarie
          - Australia/Hobart
          - Australia/Currie
          - Australia/Melbourne
          - Australia/Sydney
          - Australia/Broken_Hill
          - Australia/Brisbane
          - Australia/Lindeman
          - Australia/Adelaide
          - Australia/Darwin
          - Australia/Perth
          - Australia/Eucla
          - Asia/Baku
          - America/Barbados
          - Asia/Dhaka
          - Europe/Brussels
          - Europe/Sofia
          - Atlantic/Bermuda
          - Asia/Brunei
          - America/La_Paz
          - America/Noronha
          - America/Belem
          - America/Fortaleza
          - America/Recife
          - America/Araguaina
          - America/Maceio
          - America/Bahia
          - America/Sao_Paulo
          - America/Campo_Grande
          - America/Cuiaba
          - America/Santarem
          - America/Porto_Velho
          - America/Boa_Vista
          - America/Manaus
          - America/Eirunepe
          - America/Rio_Branco
          - America/Nassau
          - Asia/Thimphu
          - Europe/Minsk
          - America/Belize
          - America/St_Johns
          - America/Halifax
          - America/Glace_Bay
          - America/Moncton
          - America/Goose_Bay
          - America/Blanc-Sablon
          - America/Toronto
          - America/Nipigon
          - America/Thunder_Bay
          - America/Iqaluit
          - America/Pangnirtung
          - America/Atikokan
          - America/Winnipeg
          - America/Rainy_River
          - America/Resolute
          - America/Rankin_Inlet
          - America/Regina
          - America/Swift_Current
          - America/Edmonton
          - America/Cambridge_Bay
          - America/Yellowknife
          - America/Inuvik
          - America/Creston
          - America/Dawson_Creek
          - America/Fort_Nelson
          - America/Vancouver
          - America/Whitehorse
          - America/Dawson
          - Indian/Cocos
          - Europe/Zurich
          - Africa/Abidjan
          - Pacific/Rarotonga
          - America/Santiago
          - America/Punta_Arenas
          - Pacific/Easter
          - Asia/Shanghai
          - Asia/Urumqi
          - America/Bogota
          - America/Costa_Rica
          - America/Havana
          - Atlantic/Cape_Verde
          - America/Curacao
          - Indian/Christmas
          - Asia/Nicosia
          - Asia/Famagusta
          - Europe/Prague
          - Europe/Berlin
          - Europe/Copenhagen
          - America/Santo_Domingo
          - Africa/Algiers
          - America/Guayaquil
          - Pacific/Galapagos
          - Europe/Tallinn
          - Africa/Cairo
          - Africa/El_Aaiun
          - Europe/Madrid
          - Africa/Ceuta
          - Atlantic/Canary
          - Europe/Helsinki
          - Pacific/Fiji
          - Atlantic/Stanley
          - Pacific/Chuuk
          - Pacific/Pohnpei
          - Pacific/Kosrae
          - Atlantic/Faroe
          - Europe/Paris
          - Europe/London
          - Asia/Tbilisi
          - America/Cayenne
          - Africa/Accra
          - Europe/Gibraltar
          - America/Godthab
          - America/Danmarkshavn
          - America/Scoresbysund
          - America/Thule
          - Europe/Athens
          - Atlantic/South_Georgia
          - America/Guatemala
          - Pacific/Guam
          - Africa/Bissau
          - America/Guyana
          - Asia/Hong_Kong
          - America/Tegucigalpa
          - America/Port-au-Prince
          - Europe/Budapest
          - Asia/Jakarta
          - Asia/Pontianak
          - Asia/Makassar
          - Asia/Jayapura
          - Europe/Dublin
          - Asia/Jerusalem
          - Asia/Kolkata
          - Indian/Chagos
          - Asia/Baghdad
          - Asia/Tehran
          - Atlantic/Reykjavik
          - Europe/Rome
          - America/Jamaica
          - Asia/Amman
          - Asia/Tokyo
          - Africa/Nairobi
          - Asia/Bishkek
          - Pacific/Tarawa
          - Pacific/Enderbury
          - Pacific/Kiritimati
          - Asia/Pyongyang
          - Asia/Seoul
          - Asia/Almaty
          - Asia/Qyzylorda
          - Asia/Qostanay
          - Asia/Aqtobe
          - Asia/Aqtau
          - Asia/Atyrau
          - Asia/Oral
          - Asia/Beirut
          - Asia/Colombo
          - Africa/Monrovia
          - Europe/Vilnius
          - Europe/Luxembourg
          - Europe/Riga
          - Africa/Tripoli
          - Africa/Casablanca
          - Europe/Monaco
          - Europe/Chisinau
          - Pacific/Majuro
          - Pacific/Kwajalein
          - Asia/Yangon
          - Asia/Ulaanbaatar
          - Asia/Hovd
          - Asia/Choibalsan
          - Asia/Macau
          - America/Martinique
          - Europe/Malta
          - Indian/Mauritius
          - Indian/Maldives
          - America/Mexico_City
          - America/Cancun
          - America/Merida
          - America/Monterrey
          - America/Matamoros
          - America/Mazatlan
          - America/Chihuahua
          - America/Ojinaga
          - America/Hermosillo
          - America/Tijuana
          - America/Bahia_Banderas
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Africa/Maputo
          - Africa/Windhoek
          - Pacific/Noumea
          - Pacific/Norfolk
          - Africa/Lagos
          - America/Managua
          - Europe/Amsterdam
          - Europe/Oslo
          - Asia/Kathmandu
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Auckland
          - Pacific/Chatham
          - America/Panama
          - America/Lima
          - Pacific/Tahiti
          - Pacific/Marquesas
          - Pacific/Gambier
          - Pacific/Port_Moresby
          - Pacific/Bougainville
          - Asia/Manila
          - Asia/Karachi
          - Europe/Warsaw
          - America/Miquelon
          - Pacific/Pitcairn
          - America/Puerto_Rico
          - Asia/Gaza
          - Asia/Hebron
          - Europe/Lisbon
          - Atlantic/Madeira
          - Atlantic/Azores
          - Pacific/Palau
          - America/Asuncion
          - Asia/Qatar
          - Indian/Reunion
          - Europe/Bucharest
          - Europe/Belgrade
          - Europe/Kaliningrad
          - Europe/Moscow
          - Europe/Simferopol
          - Europe/Kirov
          - Europe/Astrakhan
          - Europe/Volgograd
          - Europe/Saratov
          - Europe/Ulyanovsk
          - Europe/Samara
          - Asia/Yekaterinburg
          - Asia/Omsk
          - Asia/Novosibirsk
          - Asia/Barnaul
          - Asia/Tomsk
          - Asia/Novokuznetsk
          - Asia/Krasnoyarsk
          - Asia/Irkutsk
          - Asia/Chita
          - Asia/Yakutsk
          - Asia/Khandyga
          - Asia/Vladivostok
          - Asia/Ust-Nera
          - Asia/Magadan
          - Asia/Sakhalin
          - Asia/Srednekolymsk
          - Asia/Kamchatka
          - Asia/Anadyr
          - Asia/Riyadh
          - Pacific/Guadalcanal
          - Indian/Mahe
          - Africa/Khartoum
          - Europe/Stockholm
          - Asia/Singapore
          - America/Paramaribo
          - Africa/Juba
          - Africa/Sao_Tome
          - America/El_Salvador
          - Asia/Damascus
          - America/Grand_Turk
          - Africa/Ndjamena
          - Indian/Kerguelen
          - Asia/Bangkok
          - Asia/Dushanbe
          - Pacific/Fakaofo
          - Asia/Dili
          - Asia/Ashgabat
          - Africa/Tunis
          - Pacific/Tongatapu
          - Europe/Istanbul
          - America/Port_of_Spain
          - Pacific/Funafuti
          - Asia/Taipei
          - Europe/Kiev
          - Europe/Uzhgorod
          - Europe/Zaporozhye
          - Pacific/Wake
          - America/New_York
          - America/Detroit
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Indiana/Indianapolis
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Vevay
          - America/Chicago
          - America/Indiana/Tell_City
          - America/Indiana/Knox
          - America/Menominee
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/North_Dakota/Beulah
          - America/Denver
          - America/Boise
          - America/Phoenix
          - America/Los_Angeles
          - America/Anchorage
          - America/Juneau
          - America/Sitka
          - America/Metlakatla
          - America/Yakutat
          - America/Nome
          - America/Adak
          - Pacific/Honolulu
          - America/Montevideo
          - Asia/Samarkand
          - Asia/Tashkent
          - America/Caracas
          - Asia/Ho_Chi_Minh
          - Pacific/Efate
          - Pacific/Wallis
          - Pacific/Apia
          - Africa/Johannesburg
          maxLength: 45
          type: string
        vmTranscription:
          default: 0
          enum:
          - 1
          - 0
          format: int32
          type: integer
        communication:
          type: object
      required:
      - email
      - first
      - last
      - password
      - sipPassword
      - timezone
      type: object
    usertokens:
      example:
        expiresInYears: 5
        name: name
        user: user
        token: token
        status: 5
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        user:
          description: ObjectId (unique 12 bytes ID)
          type: string
        token:
          maxLength: 2048
          type: string
        expiresInYears:
          default: 1
          format: int32
          type: integer
        status:
          default: 1
          enum:
          - 1
          - 0
          format: int32
          type: integer
      required:
      - expiresInYears
      - name
      - token
      - user
      type: object
    virtualextensions:
      example:
        phoneinboundrule: phoneinboundrule
        extension: 5
        name: name
      minProperties: 1
      properties:
        name:
          maxLength: 45
          type: string
        extension:
          format: int32
          type: integer
        phoneinboundrule:
          description: ObjectId (unique 12 bytes ID)
          type: string
      required:
      - extension
      - name
      type: object
    createAuthentication_200_response:
      allOf:
      - $ref: '#/components/schemas/authentication'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    getAcceptedSender_200_response:
      allOf:
      - $ref: '#/components/schemas/acceptedsenders'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findAcceptedSenders_200_response:
      example:
        total: 0
        data:
        - ref: users
          service: service
          serviceRef: serviceRef
          object: object
        - ref: users
          service: service
          serviceRef: serviceRef
          object: object
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/acceptedsenders'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getAnnouncement_200_response:
      allOf:
      - $ref: '#/components/schemas/announcements'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findAnnouncements_200_response:
      example:
        total: 0
        data:
        - voice: voice
          attachments:
          - http://example.com/aeiou
          - http://example.com/aeiou
          name: name
          text: text
          type: tts
        - voice: voice
          attachments:
          - http://example.com/aeiou
          - http://example.com/aeiou
          name: name
          text: text
          type: tts
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/announcements'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    findAppMarketplace_200_response:
      example:
        total: 0
        data:
        - ""
        - ""
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items: {}
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getContact_200_response:
      allOf:
      - $ref: '#/components/schemas/contacts'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findContacts_200_response:
      example:
        total: 0
        data:
        - extension: 5
          faxPhone: faxPhone
          last: last
          mobilePhone: mobilePhone
          jobTitle: jobTitle
          businessPhone: businessPhone
          avatar: avatar
          department: department
          email: email
          first: first
        - extension: 5
          faxPhone: faxPhone
          last: last
          mobilePhone: mobilePhone
          jobTitle: jobTitle
          businessPhone: businessPhone
          avatar: avatar
          department: department
          email: email
          first: first
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/contacts'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getCallQueue_200_response:
      allOf:
      - $ref: '#/components/schemas/callqueues'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findCallQueues_200_response:
      example:
        total: 0
        data:
        - announcePosition: 5
          rejectTimeout: 2
          discardAbandonedAfter: 1
          maxNoAnswer: 9
          abandonedResumeAllowed: true
          callerResumeTimeout: 5
          noAnswerDelayTimeout: 3
          moh: deafult
          maxWaitTime: 2
          tierRulesApply: false
          wrapUpTimeout: 7
          maxWaitTimeNoAgentTimeReached: 1
          tierRuleNoAgentNoWait: true
          tierRuleWaitSecond: 1
          timeBasedScore: queue
          maxWaitTimeNoAgent: 7
          name: name
          busyTimeout: 4
          strategy: ring-all
          tierRuleWaitMultiplyLevel: true
        - announcePosition: 5
          rejectTimeout: 2
          discardAbandonedAfter: 1
          maxNoAnswer: 9
          abandonedResumeAllowed: true
          callerResumeTimeout: 5
          noAnswerDelayTimeout: 3
          moh: deafult
          maxWaitTime: 2
          tierRulesApply: false
          wrapUpTimeout: 7
          maxWaitTimeNoAgentTimeReached: 1
          tierRuleNoAgentNoWait: true
          tierRuleWaitSecond: 1
          timeBasedScore: queue
          maxWaitTimeNoAgent: 7
          name: name
          busyTimeout: 4
          strategy: ring-all
          tierRuleWaitMultiplyLevel: true
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/callqueues'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getCallQueue_Agent_200_response:
      allOf:
      - $ref: '#/components/schemas/callqueueagents'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findCallQueue_Agents_200_response:
      example:
        total: 0
        data:
        - tier: 5
          callqueue: callqueue
          priority: 5
          user: user
        - tier: 5
          callqueue: callqueue
          priority: 5
          user: user
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/callqueueagents'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getChatRoom_200_response:
      allOf:
      - $ref: '#/components/schemas/chatrooms'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findChatRooms_200_response:
      example:
        total: 0
        data:
        - name: name
          direct: true
          avatar: avatar
          users: "{}"
        - name: name
          direct: true
          avatar: avatar
          users: "{}"
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/chatrooms'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getClient_200_response:
      allOf:
      - $ref: '#/components/schemas/clients'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findClients_200_response:
      example:
        total: 0
        data:
        - manufacture: cisco
          name: name
          httpUserAgent: httpUserAgent
          user: user
          mac: mac
          status: 5
        - manufacture: cisco
          name: name
          httpUserAgent: httpUserAgent
          user: user
          mac: mac
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/clients'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getConversation_200_response:
      allOf:
      - $ref: '#/components/schemas/conversations'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findConversations_200_response:
      example:
        total: 0
        data:
        - number: number
          ref: contacts
          channel: email
          contacts:
          - ""
          - ""
          object: object
          status: open
        - number: number
          ref: contacts
          channel: email
          contacts:
          - ""
          - ""
          object: object
          status: open
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/conversations'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getConversationMessage_200_response:
      allOf:
      - $ref: '#/components/schemas/conversationmessages'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findConversationMessages_200_response:
      example:
        total: 0
        data:
        - fromNumber: fromNumber
          attachments:
          - ""
          - ""
          from: "{}"
          to:
          - ""
          - ""
          text: text
          conversation: conversation
          referenceId: referenceId
          direction: inbound
        - fromNumber: fromNumber
          attachments:
          - ""
          - ""
          from: "{}"
          to:
          - ""
          - ""
          text: text
          conversation: conversation
          referenceId: referenceId
          direction: inbound
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/conversationmessages'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getConferenceRoom_200_response:
      allOf:
      - $ref: '#/components/schemas/conferencerooms'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findConferenceRooms_200_response:
      example:
        total: 0
        data:
        - lobby: 5
          isUserRoom: true
          dialInPin: 5
          name: name
          chatroom: chatroom
          share: groups
          requirePasscode: 2
          passcode: passcode
          isChatRoom: true
        - lobby: 5
          isUserRoom: true
          dialInPin: 5
          name: name
          chatroom: chatroom
          share: groups
          requirePasscode: 2
          passcode: passcode
          isChatRoom: true
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/conferencerooms'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getCustomer_200_response:
      allOf:
      - $ref: '#/components/schemas/customers'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findCustomers_200_response:
      example:
        total: 0
        data:
        - createdByIP: createdByIP
          mediaBypass: 4
          automaticRefillAmount: 2
          lowBalanceAlertCount: 9
          holdMusic: 6
          lowBalanceAlertAt: 2000-01-23T04:56:07.000+00:00
          websiteUrl: websiteUrl
          logo: logo
          credit: 5
          transcribeCalls: 7
          cdrRetention: 1
          cnamLookUps: 1
          internationalCalling: 3
          billingUserId: billingUserId
          adminUserId: adminUserId
          supportUserId: supportUserId
          accountLock: 7
          lastAutomaticRefillInvoice: lastAutomaticRefillInvoice
          lowBalanceAlertAmount: 7
          callRecording: 1
          defaultBillMethod: credit
          callDebug: 2
          name: name
          maxOutboundCallRate: 1
          callRecordingUserId: callRecordingUserId
          callForwardingCallLimit: 5
          status: active
        - createdByIP: createdByIP
          mediaBypass: 4
          automaticRefillAmount: 2
          lowBalanceAlertCount: 9
          holdMusic: 6
          lowBalanceAlertAt: 2000-01-23T04:56:07.000+00:00
          websiteUrl: websiteUrl
          logo: logo
          credit: 5
          transcribeCalls: 7
          cdrRetention: 1
          cnamLookUps: 1
          internationalCalling: 3
          billingUserId: billingUserId
          adminUserId: adminUserId
          supportUserId: supportUserId
          accountLock: 7
          lastAutomaticRefillInvoice: lastAutomaticRefillInvoice
          lowBalanceAlertAmount: 7
          callRecording: 1
          defaultBillMethod: credit
          callDebug: 2
          name: name
          maxOutboundCallRate: 1
          callRecordingUserId: callRecordingUserId
          callForwardingCallLimit: 5
          status: active
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/customers'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getDeveloperApp_200_response:
      allOf:
      - $ref: '#/components/schemas/developerapps'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findDeveloperApps_200_response:
      example:
        total: 0
        data:
        - webhookPassword: webhookPassword
          termsOfServiceUrl: termsOfServiceUrl
          visibility: private
          description: description
          services:
          - calendarevents
          - calendarevents
          type: events
          webhookTokenName: webhookTokenName
          privacyPolicyUrl: privacyPolicyUrl
          webhookUrl: webhookUrl
          feeDescription: feeDescription
          integrationType: webhook
          requireId: 5
          isFree: 5
          permissions: "{}"
          name: name
          webhookToken: webhookToken
          user: user
          events:
          - create
          - create
          webhookAuthType: header
          status: pending
          webhookUsername: webhookUsername
        - webhookPassword: webhookPassword
          termsOfServiceUrl: termsOfServiceUrl
          visibility: private
          description: description
          services:
          - calendarevents
          - calendarevents
          type: events
          webhookTokenName: webhookTokenName
          privacyPolicyUrl: privacyPolicyUrl
          webhookUrl: webhookUrl
          feeDescription: feeDescription
          integrationType: webhook
          requireId: 5
          isFree: 5
          permissions: "{}"
          name: name
          webhookToken: webhookToken
          user: user
          events:
          - create
          - create
          webhookAuthType: header
          status: pending
          webhookUsername: webhookUsername
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/developerapps'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getDeveloperApp_Subscription_200_response:
      allOf:
      - $ref: '#/components/schemas/developerappsubscriptions'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findDeveloperApp_Subscriptions_200_response:
      example:
        total: 0
        data:
        - ref: ref
          requireId: 5
          permissions: "{}"
          developerApp: developerApp
          services:
          - calendarevents
          - calendarevents
          events:
          - create
          - create
          object: object
        - ref: ref
          requireId: 5
          permissions: "{}"
          developerApp: developerApp
          services:
          - calendarevents
          - calendarevents
          events:
          - create
          - create
          object: object
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/developerappsubscriptions'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getdirectory_200_response:
      allOf:
      - $ref: '#/components/schemas/directories'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findDirectories_200_response:
      example:
        total: 0
        data:
        - name: name
          groups:
          - groups
          - groups
          type: customers
          announcement: announcement
        - name: name
          groups:
          - groups
          - groups
          type: customers
          announcement: announcement
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/directories'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getDomain_200_response:
      allOf:
      - $ref: '#/components/schemas/domains'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findDomains_200_response:
      example:
        total: 0
        data:
        - name: name
          status: 5
        - name: name
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/domains'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getFax_200_response:
      allOf:
      - $ref: '#/components/schemas/faxes'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findFaxes_200_response:
      example:
        total: 0
        data:
        - callerIdNumber: callerIdNumber
          transferedPages: 2
          error: error
          type: send
          number: number
          retries: 7
          senderName: senderName
          pages: 5
          file: file
          callerDestination: callerDestination
          contact: contact
          senderEmail: senderEmail
          faxAccount: faxAccount
          invoice: invoice
          statusCode: 5
          status: processing
          order: order
        - callerIdNumber: callerIdNumber
          transferedPages: 2
          error: error
          type: send
          number: number
          retries: 7
          senderName: senderName
          pages: 5
          file: file
          callerDestination: callerDestination
          contact: contact
          senderEmail: senderEmail
          faxAccount: faxAccount
          invoice: invoice
          statusCode: 5
          status: processing
          order: order
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/faxes'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getFaxAccount_200_response:
      allOf:
      - $ref: '#/components/schemas/faxaccounts'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findFaxAccounts_200_response:
      example:
        total: 0
        data:
        - number: number
          inboundNotification: inboundNotification
          name: name
          outboundNotification: outboundNotification
          order: order
        - number: number
          inboundNotification: inboundNotification
          name: name
          outboundNotification: outboundNotification
          order: order
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/faxaccounts'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getFirewall_200_response:
      allOf:
      - $ref: '#/components/schemas/firewall'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findFirewall_200_response:
      example:
        total: 0
        data:
        - hits: 5
          notificationHits: 9
          param: param
          name: name
          ai: 2
          description: description
          priority: 5
          type: allow
          target: numbers
          direction: inbound
          status: 7
        - hits: 5
          notificationHits: 9
          param: param
          name: name
          ai: 2
          description: description
          priority: 5
          type: allow
          target: numbers
          direction: inbound
          status: 7
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/firewall'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getGroup_200_response:
      allOf:
      - $ref: '#/components/schemas/groups'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findGroups_200_response:
      example:
        total: 0
        data:
        - name: name
          description: description
          status: 5
        - name: name
          description: description
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/groups'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getGroupMember_200_response:
      allOf:
      - $ref: '#/components/schemas/groupmembers'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findGroupMembers_200_response:
      example:
        total: 0
        data:
        - ref: users
          priority: 5
          group: group
          object: object
        - ref: users
          priority: 5
          group: group
          object: object
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/groupmembers'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getHoliday_200_response:
      allOf:
      - $ref: '#/components/schemas/holidays'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findHolidays_200_response:
      example:
        total: 0
        data:
        - objectRef: objectRef
          ref: ref
          callForwardingDestination: callForwardingDestination
          name: name
          dateTimeRanges:
          - - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
          - - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
          destination: destination
          destinationType: announcements
          object: object
          status: 5
        - objectRef: objectRef
          ref: ref
          callForwardingDestination: callForwardingDestination
          name: name
          dateTimeRanges:
          - - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
          - - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
          destination: destination
          destinationType: announcements
          object: object
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/holidays'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getInvoiceItem_200_response:
      allOf:
      - $ref: '#/components/schemas/invoiceitems'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findInvoiceItems_200_response:
      example:
        total: 0
        data:
        - amount: 5
          ref: ref
          quantity: 7
          name: name
          setup: 5
          taxes: 2
          invoice: invoice
          object: object
        - amount: 5
          ref: ref
          quantity: 7
          name: name
          setup: 5
          taxes: 2
          invoice: invoice
          object: object
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/invoiceitems'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getInvoice_200_response:
      allOf:
      - $ref: '#/components/schemas/invoices'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findInvoices_200_response:
      example:
        total: 0
        data:
        - dueAt: 2000-01-23T04:56:07.000+00:00
          amount: 5
          subtotal: 5
          setup: 7
          discount: 9
          tax: 2
          closedAt: 2000-01-23T04:56:07.000+00:00
          error: error
          status: open
        - dueAt: 2000-01-23T04:56:07.000+00:00
          amount: 5
          subtotal: 5
          setup: 7
          discount: 9
          tax: 2
          closedAt: 2000-01-23T04:56:07.000+00:00
          error: error
          status: open
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/invoices'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getLicense_200_response:
      allOf:
      - $ref: '#/components/schemas/licenses'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findLicenses_200_response:
      example:
        total: 0
        data:
        - ref: ref
          field: field
          order: order
          object: object
        - ref: ref
          field: field
          order: order
          object: object
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/licenses'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getMenu_200_response:
      allOf:
      - $ref: '#/components/schemas/menus'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findMenus_200_response:
      example:
        total: 0
        data:
        - maxExtensionLength: 5
          maxFailures: 2
          exitSound: default
          speechRecognition: 5
          destination: destination
          maxTimeouts: 7
          directory: directory
          menuVoice: menuVoice
          timeout: 9
          ref: ref
          timeschedule: timeschedule
          callForwardingDestination: callForwardingDestination
          touchToneTerminators: 3
          greetingTTS: greetingTTS
          name: name
          destinationType: announcements
          greetingType: tts
          transferAnnouncement: default
        - maxExtensionLength: 5
          maxFailures: 2
          exitSound: default
          speechRecognition: 5
          destination: destination
          maxTimeouts: 7
          directory: directory
          menuVoice: menuVoice
          timeout: 9
          ref: ref
          timeschedule: timeschedule
          callForwardingDestination: callForwardingDestination
          touchToneTerminators: 3
          greetingTTS: greetingTTS
          name: name
          destinationType: announcements
          greetingType: tts
          transferAnnouncement: default
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/menus'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getMenuOption_200_response:
      allOf:
      - $ref: '#/components/schemas/menuoptions'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findMenuOptions_200_response:
      example:
        total: 0
        data:
        - ref: ref
          callForwardingDestination: callForwardingDestination
          name: name
          destination: destination
          destinationType: announcements
          menus: ""
          digit: 5
        - ref: ref
          callForwardingDestination: callForwardingDestination
          name: name
          destination: destination
          destinationType: announcements
          menus: ""
          digit: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/menuoptions'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getMessageCampaign_200_response:
      allOf:
      - $ref: '#/components/schemas/messagecampaigns'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findMessageCampaigns_200_response:
      example:
        total: 0
        data:
        - sample1: sample1
          campaignId: campaignId
          directLending: 9
          subscriberHelp: 2
          subscriberOptin: 5
          affiliateMarketing: 4
          sample5: sample5
          sample4: sample4
          referenceId: referenceId
          sample3: sample3
          sample2: sample2
          embeddedLink: 3
          useCase: useCase
          mnos: "{}"
          brandId: brandId
          name: name
          subscriberOptout: 5
          ageGated: 7
          embeddedPhone: 2
          numberPool: 7
          subUseCases:
          - ""
          - ""
          order: order
        - sample1: sample1
          campaignId: campaignId
          directLending: 9
          subscriberHelp: 2
          subscriberOptin: 5
          affiliateMarketing: 4
          sample5: sample5
          sample4: sample4
          referenceId: referenceId
          sample3: sample3
          sample2: sample2
          embeddedLink: 3
          useCase: useCase
          mnos: "{}"
          brandId: brandId
          name: name
          subscriberOptout: 5
          ageGated: 7
          embeddedPhone: 2
          numberPool: 7
          subUseCases:
          - ""
          - ""
          order: order
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/messagecampaigns'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getMessageBrand_200_response:
      allOf:
      - $ref: '#/components/schemas/messagebrands'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findMessageBrands_200_response:
      example:
        total: 0
        data:
        - entityType: entityType
          vertical: vertical
          ein: ein
          referenceId: referenceId
          cspId: cspId
          brandRelationship: brandRelationship
          brandId: brandId
          einIssuingCountry: einIssuingCountry
          name: name
          universalEin: universalEin
          user: user
          order: order
          status: verified
        - entityType: entityType
          vertical: vertical
          ein: ein
          referenceId: referenceId
          cspId: cspId
          brandRelationship: brandRelationship
          brandId: brandId
          einIssuingCountry: einIssuingCountry
          name: name
          universalEin: universalEin
          user: user
          order: order
          status: verified
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/messagebrands'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getNumber_200_response:
      allOf:
      - $ref: '#/components/schemas/numbers'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findNumbers_200_response:
      example:
        total: 0
        data:
        - voice: 9
          directoryListingOrderDate: 2000-01-23T04:56:07.000+00:00
          directoryListing: directoryListing
          destination: destination
          changeRegionOrderDate: 2000-01-23T04:56:07.000+00:00
          callerName: callerName
          e911OrderDate: 2000-01-23T04:56:07.000+00:00
          mms: 4
          ref: ref
          messageCampaignOrderId: messageCampaignOrderId
          callerNameSupported: 1
          callForwardingDestination: callForwardingDestination
          originalProvider: originalProvider
          messageType: SMS
          provider: provider
          callerNameOrderId: callerNameOrderId
          countryCode: countryCode
          inUse: 5
          sms: 2
          e911OrderId: e911OrderId
          destinationType: park
          perMinuteRate: 2
          directoryListingOrderId: directoryListingOrderId
          fax: 7
          callerNameOrderDate: 2000-01-23T04:56:07.000+00:00
          directoryListingSupported: 1
          amount: 5
          e911Supported: 7
          providerOrderId: providerOrderId
          messagingSupported: 1
          messageCampaignOrderDate: 2000-01-23T04:56:07.000+00:00
          name: name
          messageClass: P2P
          changeRegionOrderId: changeRegionOrderId
          e911: e911
          messageCampaign: messageCampaign
          status: 3
        - voice: 9
          directoryListingOrderDate: 2000-01-23T04:56:07.000+00:00
          directoryListing: directoryListing
          destination: destination
          changeRegionOrderDate: 2000-01-23T04:56:07.000+00:00
          callerName: callerName
          e911OrderDate: 2000-01-23T04:56:07.000+00:00
          mms: 4
          ref: ref
          messageCampaignOrderId: messageCampaignOrderId
          callerNameSupported: 1
          callForwardingDestination: callForwardingDestination
          originalProvider: originalProvider
          messageType: SMS
          provider: provider
          callerNameOrderId: callerNameOrderId
          countryCode: countryCode
          inUse: 5
          sms: 2
          e911OrderId: e911OrderId
          destinationType: park
          perMinuteRate: 2
          directoryListingOrderId: directoryListingOrderId
          fax: 7
          callerNameOrderDate: 2000-01-23T04:56:07.000+00:00
          directoryListingSupported: 1
          amount: 5
          e911Supported: 7
          providerOrderId: providerOrderId
          messagingSupported: 1
          messageCampaignOrderDate: 2000-01-23T04:56:07.000+00:00
          name: name
          messageClass: P2P
          changeRegionOrderId: changeRegionOrderId
          e911: e911
          messageCampaign: messageCampaign
          status: 3
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/numbers'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getNumberPort_200_response:
      allOf:
      - $ref: '#/components/schemas/numberports'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findNumberPorts_200_response:
      example:
        total: 0
        data:
        - destination: destination
          office: office
          type: port in
          accountNumber: accountNumber
          accountPhoneNumber: accountPhoneNumber
          ref: ref
          callForwardingDestination: callForwardingDestination
          typeOfService: business
          name: name
          destinationType: announcements
          e911: 5
          invoice: invoice
          authorizedPerson: authorizedPerson
          desiredDueDate: 2000-01-23T04:56:07.000+00:00
          status: processing
        - destination: destination
          office: office
          type: port in
          accountNumber: accountNumber
          accountPhoneNumber: accountPhoneNumber
          ref: ref
          callForwardingDestination: callForwardingDestination
          typeOfService: business
          name: name
          destinationType: announcements
          e911: 5
          invoice: invoice
          authorizedPerson: authorizedPerson
          desiredDueDate: 2000-01-23T04:56:07.000+00:00
          status: processing
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/numberports'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getOffice_200_response:
      allOf:
      - $ref: '#/components/schemas/offices'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findOffices_200_response:
      example:
        total: 0
        data:
        - zip: zip
          zipCode: zipCode
          country: country
          streetNumber: streetNumber
          city: city
          address2: address2
          preDirection: preDirection
          streetName: streetName
          name: name
          streetSuffix: streetSuffix
          state: state
          region: region
          providers: "{}"
        - zip: zip
          zipCode: zipCode
          country: country
          streetNumber: streetNumber
          city: city
          address2: address2
          preDirection: preDirection
          streetName: streetName
          name: name
          streetSuffix: streetSuffix
          state: state
          region: region
          providers: "{}"
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/offices'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getPhoneInbound_Rule_200_response:
      allOf:
      - $ref: '#/components/schemas/phoneinboundrules'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findPhoneInbound_Rules_200_response:
      example:
        total: 0
        data:
        - name: name
          description: description
          outboundCallerId: outboundCallerId
        - name: name
          description: description
          outboundCallerId: outboundCallerId
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/phoneinboundrules'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getPhoneOutbound_Rule_200_response:
      allOf:
      - $ref: '#/components/schemas/phoneoutboundrules'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findPhoneOutbound_Rules_200_response:
      example:
        total: 0
        data:
        - name: name
          description: description
          outboundCallerId: outboundCallerId
          status: 5
        - name: name
          description: description
          outboundCallerId: outboundCallerId
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/phoneoutboundrules'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getPhoneInbound_Rule_Action_200_response:
      allOf:
      - $ref: '#/components/schemas/phoneinboundruleactions'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findPhoneInbound_Rule_Actions_200_response:
      example:
        total: 0
        data:
        - phoneinboundrule: phoneinboundrule
          ref: ref
          timeschedule: timeschedule
          callForwardingDestination: callForwardingDestination
          name: name
          destination: destination
          destinationType: announcements
          priority: 2
          timeout: 5
          status: 5
        - phoneinboundrule: phoneinboundrule
          ref: ref
          timeschedule: timeschedule
          callForwardingDestination: callForwardingDestination
          name: name
          destination: destination
          destinationType: announcements
          priority: 2
          timeout: 5
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/phoneinboundruleactions'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getPhoneOutbound_Rule_Action_200_response:
      allOf:
      - $ref: '#/components/schemas/phoneoutboundruleactions'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findPhoneOutbound_Rule_Actions_200_response:
      example:
        total: 0
        data:
        - appendChars: appendChars
          rangeStart: 7
          length: 2
          priority: 5
          prependChars: prependChars
          removeEndingChars: 2
          rangeEnd: 9
          removeStartingChars: 3
          contains: contains
          lengthType: atleast
          route: default
          routingType: priority
          name: name
          phoneoutboundrule: phoneoutboundrule
          startingChars: startingChars
          group: group
          status: 5
        - appendChars: appendChars
          rangeStart: 7
          length: 2
          priority: 5
          prependChars: prependChars
          removeEndingChars: 2
          rangeEnd: 9
          removeStartingChars: 3
          contains: contains
          lengthType: atleast
          route: default
          routingType: priority
          name: name
          phoneoutboundrule: phoneoutboundrule
          startingChars: startingChars
          group: group
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/phoneoutboundruleactions'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getRateCenter_200_response:
      allOf:
      - $ref: '#/components/schemas/ratecenters'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findRateCenters_200_response:
      example:
        total: 0
        data:
        - lata: lata
          locState: locState
          rcAbbre: rcAbbre
          npa: npa
          nxx: nxx
        - lata: lata
          locState: locState
          rcAbbre: rcAbbre
          npa: npa
          nxx: nxx
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ratecenters'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getServer_200_response:
      allOf:
      - $ref: '#/components/schemas/servers'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findServers_200_response:
      example:
        total: 0
        data:
        - domesticOutboundCallLimit: 5
          tollFreeChannelLimit: 9
          bypassMedia: 2
          noInstantRingBack: 3
          type: sip
          disableRTPAutoAdjust: 4
          outboundSipTrunkingOrder: outboundSipTrunkingOrder
          port: 5
          internationalOutboundCallLimit: 7
          name: name
          host: host
          inboundSipTrunkingOrder: inboundSipTrunkingOrder
          callerId: callerId
          domesticInboundCallLimit: 2
        - domesticOutboundCallLimit: 5
          tollFreeChannelLimit: 9
          bypassMedia: 2
          noInstantRingBack: 3
          type: sip
          disableRTPAutoAdjust: 4
          outboundSipTrunkingOrder: outboundSipTrunkingOrder
          port: 5
          internationalOutboundCallLimit: 7
          name: name
          host: host
          inboundSipTrunkingOrder: inboundSipTrunkingOrder
          callerId: callerId
          domesticInboundCallLimit: 2
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/servers'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getTimeSchedule_200_response:
      allOf:
      - $ref: '#/components/schemas/timeschedules'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findTimeSchedules_200_response:
      example:
        total: 0
        data:
        - sunday: "{}"
          saturday: "{}"
          tuesday: "{}"
          timezone: America/New_York
          name: name
          wednesday: "{}"
          thursday: "{}"
          friday: "{}"
          monday: "{}"
        - sunday: "{}"
          saturday: "{}"
          tuesday: "{}"
          timezone: America/New_York
          name: name
          wednesday: "{}"
          thursday: "{}"
          friday: "{}"
          monday: "{}"
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/timeschedules'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getUser_200_response:
      allOf:
      - $ref: '#/components/schemas/users'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findUsers_200_response:
      example:
        total: 0
        data:
        - extension: 5
          callerIdNumber: callerIdNumber
          timezone: America/New_York
          jobTitle: jobTitle
          language: en
          office: office
          number: number
          password: password
          mediaServerPermission: r
          pin: 9
          isPrimary: 2
          adminPermission: r
          superAdminPermission: r
          department: department
          vmTranscription: 3
          communication: "{}"
          email: email
          billingPermission: r
          last: last
          sipPassword: sipPassword
          vmPlaybackNumber: vmPlaybackNumber
          mailServerPermission: r
          avatar: avatar
          agilePermission: r
          vmFile: vmFile
          jobServerPermission: r
          phonePermission: r
          vmGreetingType: default
          mobilePhone: mobilePhone
          vmTimeout: 7
          businessPhone: businessPhone
          turnPassword: turnPassword
          region: region
          first: first
          customCallerId: 5
          status: active
        - extension: 5
          callerIdNumber: callerIdNumber
          timezone: America/New_York
          jobTitle: jobTitle
          language: en
          office: office
          number: number
          password: password
          mediaServerPermission: r
          pin: 9
          isPrimary: 2
          adminPermission: r
          superAdminPermission: r
          department: department
          vmTranscription: 3
          communication: "{}"
          email: email
          billingPermission: r
          last: last
          sipPassword: sipPassword
          vmPlaybackNumber: vmPlaybackNumber
          mailServerPermission: r
          avatar: avatar
          agilePermission: r
          vmFile: vmFile
          jobServerPermission: r
          phonePermission: r
          vmGreetingType: default
          mobilePhone: mobilePhone
          vmTimeout: 7
          businessPhone: businessPhone
          turnPassword: turnPassword
          region: region
          first: first
          customCallerId: 5
          status: active
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/users'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getUserToken_200_response:
      allOf:
      - $ref: '#/components/schemas/usertokens'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findUserTokens_200_response:
      example:
        total: 0
        data:
        - expiresInYears: 5
          name: name
          user: user
          token: token
          status: 5
        - expiresInYears: 5
          name: name
          user: user
          token: token
          status: 5
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/usertokens'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
    getVirtualExtension_200_response:
      allOf:
      - $ref: '#/components/schemas/virtualextensions'
      - $ref: '#/components/schemas/responseUsers'
      - $ref: '#/components/schemas/responseDate'
    findVirtualExtensions_200_response:
      example:
        total: 0
        data:
        - phoneinboundrule: phoneinboundrule
          extension: 5
          name: name
        - phoneinboundrule: phoneinboundrule
          extension: 5
          name: name
        limit: 6
        skip: 1
      properties:
        total:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        skip:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/virtualextensions'
          type: array
      required:
      - data
      - limit
      - skip
      - total
      type: object
  securitySchemes:
    jwt:
      description: "JWT to authorize requests. You can obtain a short-term JWT key\
        \ from the /authentication service, or create a long-term JWT key in the portal."
      in: header
      name: Authorization
      type: apiKey
x-tagGroups:
- name: Clients
  tags:
  - client
  - Authentication
  - Accepted Senders
  - Announcements
  - App Marketplace
  - Contacts
  - Call Queues
  - Call Queue Agents
  - Chat Rooms
  - Clients
  - Conversations
  - Conversation Messages
  - Conference Rooms
  - Conference Numbers
  - Customers
  - Developer Apps
  - Developer App Subscriptions
  - Directories
  - Domains
  - DNS Records
  - Faxes
  - Fax Accounts
  - Find Numbers
  - Firewall
  - Groups
  - Group Members
  - Holidays
  - Info
  - Invoice Items
  - Invoices
  - Licenses
  - Menus
  - Menu Options
  - Message Campaigns
  - Message Brands
  - Numbers
  - Number Ports
  - Offices
  - Phone Inbound Rules
  - Phone Outbound Rules
  - Phone Inbound Rule Actions
  - Phone Outbound Rule Actions
  - Rate Centers
  - Servers
  - Time Schedules
  - Users
  - User Tokens
  - Virtual Extensions
  - Voicemail

