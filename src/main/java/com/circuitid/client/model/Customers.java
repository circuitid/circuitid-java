/*
 * Circuit ID REST API
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.17
 * Contact: support@circuitid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circuitid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.circuitid.client.JSON;

/**
 * Customers
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-25T10:19:13.415Z[UTC]")
public class Customers {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Object name = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    SUSPENDED("suspended"),
    
    TERMINATED("terminated"),
    
    FRAUD("fraud");

    private Object value;

    StatusEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Object value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status = active;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private Object websiteUrl = null;

  public static final String SERIALIZED_NAME_LOGO = "logo";
  @SerializedName(SERIALIZED_NAME_LOGO)
  private Object logo = null;

  public static final String SERIALIZED_NAME_CREDIT = "credit";
  @SerializedName(SERIALIZED_NAME_CREDIT)
  private Object credit = 0;

  public static final String SERIALIZED_NAME_ADMIN_USER_ID = "adminUserId";
  @SerializedName(SERIALIZED_NAME_ADMIN_USER_ID)
  private Object adminUserId = null;

  public static final String SERIALIZED_NAME_BILLING_USER_ID = "billingUserId";
  @SerializedName(SERIALIZED_NAME_BILLING_USER_ID)
  private Object billingUserId = null;

  public static final String SERIALIZED_NAME_CALL_RECORDING_USER_ID = "callRecordingUserId";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING_USER_ID)
  private Object callRecordingUserId = null;

  public static final String SERIALIZED_NAME_CALL_FORWARDING_CALL_LIMIT = "callForwardingCallLimit";
  @SerializedName(SERIALIZED_NAME_CALL_FORWARDING_CALL_LIMIT)
  private Object callForwardingCallLimit = 10;

  public static final String SERIALIZED_NAME_SUPPORT_USER_ID = "supportUserId";
  @SerializedName(SERIALIZED_NAME_SUPPORT_USER_ID)
  private Object supportUserId = null;

  public static final String SERIALIZED_NAME_AUTOMATIC_REFILL_AMOUNT = "automaticRefillAmount";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_REFILL_AMOUNT)
  private Object automaticRefillAmount = 0;

  public static final String SERIALIZED_NAME_LOW_BALANCE_ALERT_AMOUNT = "lowBalanceAlertAmount";
  @SerializedName(SERIALIZED_NAME_LOW_BALANCE_ALERT_AMOUNT)
  private Object lowBalanceAlertAmount = 0;

  public static final String SERIALIZED_NAME_LOW_BALANCE_ALERT_AT = "lowBalanceAlertAt";
  @SerializedName(SERIALIZED_NAME_LOW_BALANCE_ALERT_AT)
  private Object lowBalanceAlertAt = null;

  public static final String SERIALIZED_NAME_LOW_BALANCE_ALERT_COUNT = "lowBalanceAlertCount";
  @SerializedName(SERIALIZED_NAME_LOW_BALANCE_ALERT_COUNT)
  private Object lowBalanceAlertCount = 0;

  public static final String SERIALIZED_NAME_LAST_AUTOMATIC_REFILL_INVOICE = "lastAutomaticRefillInvoice";
  @SerializedName(SERIALIZED_NAME_LAST_AUTOMATIC_REFILL_INVOICE)
  private Object lastAutomaticRefillInvoice = null;

  /**
   * Gets or Sets internationalCalling
   */
  @JsonAdapter(InternationalCallingEnum.Adapter.class)
  public enum InternationalCallingEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    InternationalCallingEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InternationalCallingEnum fromValue(Object value) {
      for (InternationalCallingEnum b : InternationalCallingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InternationalCallingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InternationalCallingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InternationalCallingEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return InternationalCallingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INTERNATIONAL_CALLING = "internationalCalling";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_CALLING)
  private InternationalCallingEnum internationalCalling = 0;

  public static final String SERIALIZED_NAME_CREATED_BY_I_P = "createdByIP";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_I_P)
  private Object createdByIP = null;

  /**
   * Gets or Sets callDebug
   */
  @JsonAdapter(CallDebugEnum.Adapter.class)
  public enum CallDebugEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    CallDebugEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CallDebugEnum fromValue(Object value) {
      for (CallDebugEnum b : CallDebugEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CallDebugEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CallDebugEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CallDebugEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return CallDebugEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CALL_DEBUG = "callDebug";
  @SerializedName(SERIALIZED_NAME_CALL_DEBUG)
  private CallDebugEnum callDebug = 0;

  /**
   * Gets or Sets mediaBypass
   */
  @JsonAdapter(MediaBypassEnum.Adapter.class)
  public enum MediaBypassEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    MediaBypassEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MediaBypassEnum fromValue(Object value) {
      for (MediaBypassEnum b : MediaBypassEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MediaBypassEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MediaBypassEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MediaBypassEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return MediaBypassEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MEDIA_BYPASS = "mediaBypass";
  @SerializedName(SERIALIZED_NAME_MEDIA_BYPASS)
  private MediaBypassEnum mediaBypass = 0;

  /**
   * Gets or Sets accountLock
   */
  @JsonAdapter(AccountLockEnum.Adapter.class)
  public enum AccountLockEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    AccountLockEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccountLockEnum fromValue(Object value) {
      for (AccountLockEnum b : AccountLockEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AccountLockEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccountLockEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccountLockEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return AccountLockEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACCOUNT_LOCK = "accountLock";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LOCK)
  private AccountLockEnum accountLock = 1;

  /**
   * Gets or Sets callRecording
   */
  @JsonAdapter(CallRecordingEnum.Adapter.class)
  public enum CallRecordingEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    CallRecordingEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CallRecordingEnum fromValue(Object value) {
      for (CallRecordingEnum b : CallRecordingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CallRecordingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CallRecordingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CallRecordingEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return CallRecordingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CALL_RECORDING = "callRecording";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING)
  private CallRecordingEnum callRecording = 0;

  public static final String SERIALIZED_NAME_CDR_RETENTION = "cdrRetention";
  @SerializedName(SERIALIZED_NAME_CDR_RETENTION)
  private Object cdrRetention = 12;

  /**
   * Gets or Sets cnamLookUps
   */
  @JsonAdapter(CnamLookUpsEnum.Adapter.class)
  public enum CnamLookUpsEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    CnamLookUpsEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CnamLookUpsEnum fromValue(Object value) {
      for (CnamLookUpsEnum b : CnamLookUpsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CnamLookUpsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CnamLookUpsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CnamLookUpsEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return CnamLookUpsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CNAM_LOOK_UPS = "cnamLookUps";
  @SerializedName(SERIALIZED_NAME_CNAM_LOOK_UPS)
  private CnamLookUpsEnum cnamLookUps = 0;

  /**
   * Gets or Sets holdMusic
   */
  @JsonAdapter(HoldMusicEnum.Adapter.class)
  public enum HoldMusicEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    HoldMusicEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static HoldMusicEnum fromValue(Object value) {
      for (HoldMusicEnum b : HoldMusicEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<HoldMusicEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final HoldMusicEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public HoldMusicEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return HoldMusicEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_HOLD_MUSIC = "holdMusic";
  @SerializedName(SERIALIZED_NAME_HOLD_MUSIC)
  private HoldMusicEnum holdMusic = 0;

  /**
   * Gets or Sets transcribeCalls
   */
  @JsonAdapter(TranscribeCallsEnum.Adapter.class)
  public enum TranscribeCallsEnum {
    _1("1"),
    
    _0("0");

    private Object value;

    TranscribeCallsEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TranscribeCallsEnum fromValue(Object value) {
      for (TranscribeCallsEnum b : TranscribeCallsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TranscribeCallsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TranscribeCallsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TranscribeCallsEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return TranscribeCallsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TRANSCRIBE_CALLS = "transcribeCalls";
  @SerializedName(SERIALIZED_NAME_TRANSCRIBE_CALLS)
  private TranscribeCallsEnum transcribeCalls = null;

  public static final String SERIALIZED_NAME_MAX_OUTBOUND_CALL_RATE = "maxOutboundCallRate";
  @SerializedName(SERIALIZED_NAME_MAX_OUTBOUND_CALL_RATE)
  private Object maxOutboundCallRate = 1;

  /**
   * Gets or Sets defaultBillMethod
   */
  @JsonAdapter(DefaultBillMethodEnum.Adapter.class)
  public enum DefaultBillMethodEnum {
    CREDIT("credit"),
    
    PAYMENTMETHOD("paymentmethod");

    private Object value;

    DefaultBillMethodEnum(Object value) {
      this.value = value;
    }

    public Object getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultBillMethodEnum fromValue(Object value) {
      for (DefaultBillMethodEnum b : DefaultBillMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DefaultBillMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultBillMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultBillMethodEnum read(final JsonReader jsonReader) throws IOException {
        Object value =  jsonReader.nextObject();
        return DefaultBillMethodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DEFAULT_BILL_METHOD = "defaultBillMethod";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BILL_METHOD)
  private DefaultBillMethodEnum defaultBillMethod = credit;

  public Customers() {
  }

  public Customers name(Object name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public Object getName() {
    return name;
  }


  public void setName(Object name) {
    this.name = name;
  }


  public Customers status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Customers websiteUrl(Object websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Get websiteUrl
   * @return websiteUrl
  **/
  @javax.annotation.Nullable
  public Object getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(Object websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  public Customers logo(Object logo) {
    
    this.logo = logo;
    return this;
  }

   /**
   * Get logo
   * @return logo
  **/
  @javax.annotation.Nullable
  public Object getLogo() {
    return logo;
  }


  public void setLogo(Object logo) {
    this.logo = logo;
  }


  public Customers credit(Object credit) {
    
    this.credit = credit;
    return this;
  }

   /**
   * Get credit
   * @return credit
  **/
  @javax.annotation.Nullable
  public Object getCredit() {
    return credit;
  }


  public void setCredit(Object credit) {
    this.credit = credit;
  }


  public Customers adminUserId(Object adminUserId) {
    
    this.adminUserId = adminUserId;
    return this;
  }

   /**
   * ObjectId (unique 12 bytes ID)
   * @return adminUserId
  **/
  @javax.annotation.Nullable
  public Object getAdminUserId() {
    return adminUserId;
  }


  public void setAdminUserId(Object adminUserId) {
    this.adminUserId = adminUserId;
  }


  public Customers billingUserId(Object billingUserId) {
    
    this.billingUserId = billingUserId;
    return this;
  }

   /**
   * ObjectId (unique 12 bytes ID)
   * @return billingUserId
  **/
  @javax.annotation.Nullable
  public Object getBillingUserId() {
    return billingUserId;
  }


  public void setBillingUserId(Object billingUserId) {
    this.billingUserId = billingUserId;
  }


  public Customers callRecordingUserId(Object callRecordingUserId) {
    
    this.callRecordingUserId = callRecordingUserId;
    return this;
  }

   /**
   * ObjectId (unique 12 bytes ID)
   * @return callRecordingUserId
  **/
  @javax.annotation.Nullable
  public Object getCallRecordingUserId() {
    return callRecordingUserId;
  }


  public void setCallRecordingUserId(Object callRecordingUserId) {
    this.callRecordingUserId = callRecordingUserId;
  }


  public Customers callForwardingCallLimit(Object callForwardingCallLimit) {
    
    this.callForwardingCallLimit = callForwardingCallLimit;
    return this;
  }

   /**
   * Get callForwardingCallLimit
   * @return callForwardingCallLimit
  **/
  @javax.annotation.Nullable
  public Object getCallForwardingCallLimit() {
    return callForwardingCallLimit;
  }


  public void setCallForwardingCallLimit(Object callForwardingCallLimit) {
    this.callForwardingCallLimit = callForwardingCallLimit;
  }


  public Customers supportUserId(Object supportUserId) {
    
    this.supportUserId = supportUserId;
    return this;
  }

   /**
   * ObjectId (unique 12 bytes ID)
   * @return supportUserId
  **/
  @javax.annotation.Nullable
  public Object getSupportUserId() {
    return supportUserId;
  }


  public void setSupportUserId(Object supportUserId) {
    this.supportUserId = supportUserId;
  }


  public Customers automaticRefillAmount(Object automaticRefillAmount) {
    
    this.automaticRefillAmount = automaticRefillAmount;
    return this;
  }

   /**
   * Get automaticRefillAmount
   * @return automaticRefillAmount
  **/
  @javax.annotation.Nullable
  public Object getAutomaticRefillAmount() {
    return automaticRefillAmount;
  }


  public void setAutomaticRefillAmount(Object automaticRefillAmount) {
    this.automaticRefillAmount = automaticRefillAmount;
  }


  public Customers lowBalanceAlertAmount(Object lowBalanceAlertAmount) {
    
    this.lowBalanceAlertAmount = lowBalanceAlertAmount;
    return this;
  }

   /**
   * Get lowBalanceAlertAmount
   * @return lowBalanceAlertAmount
  **/
  @javax.annotation.Nullable
  public Object getLowBalanceAlertAmount() {
    return lowBalanceAlertAmount;
  }


  public void setLowBalanceAlertAmount(Object lowBalanceAlertAmount) {
    this.lowBalanceAlertAmount = lowBalanceAlertAmount;
  }


  public Customers lowBalanceAlertAt(Object lowBalanceAlertAt) {
    
    this.lowBalanceAlertAt = lowBalanceAlertAt;
    return this;
  }

   /**
   * Get lowBalanceAlertAt
   * @return lowBalanceAlertAt
  **/
  @javax.annotation.Nullable
  public Object getLowBalanceAlertAt() {
    return lowBalanceAlertAt;
  }


  public void setLowBalanceAlertAt(Object lowBalanceAlertAt) {
    this.lowBalanceAlertAt = lowBalanceAlertAt;
  }


  public Customers lowBalanceAlertCount(Object lowBalanceAlertCount) {
    
    this.lowBalanceAlertCount = lowBalanceAlertCount;
    return this;
  }

   /**
   * Get lowBalanceAlertCount
   * @return lowBalanceAlertCount
  **/
  @javax.annotation.Nullable
  public Object getLowBalanceAlertCount() {
    return lowBalanceAlertCount;
  }


  public void setLowBalanceAlertCount(Object lowBalanceAlertCount) {
    this.lowBalanceAlertCount = lowBalanceAlertCount;
  }


  public Customers lastAutomaticRefillInvoice(Object lastAutomaticRefillInvoice) {
    
    this.lastAutomaticRefillInvoice = lastAutomaticRefillInvoice;
    return this;
  }

   /**
   * ObjectId (unique 12 bytes ID)
   * @return lastAutomaticRefillInvoice
  **/
  @javax.annotation.Nullable
  public Object getLastAutomaticRefillInvoice() {
    return lastAutomaticRefillInvoice;
  }


  public void setLastAutomaticRefillInvoice(Object lastAutomaticRefillInvoice) {
    this.lastAutomaticRefillInvoice = lastAutomaticRefillInvoice;
  }


  public Customers internationalCalling(InternationalCallingEnum internationalCalling) {
    
    this.internationalCalling = internationalCalling;
    return this;
  }

   /**
   * Get internationalCalling
   * @return internationalCalling
  **/
  @javax.annotation.Nullable
  public InternationalCallingEnum getInternationalCalling() {
    return internationalCalling;
  }


  public void setInternationalCalling(InternationalCallingEnum internationalCalling) {
    this.internationalCalling = internationalCalling;
  }


  public Customers createdByIP(Object createdByIP) {
    
    this.createdByIP = createdByIP;
    return this;
  }

   /**
   * Get createdByIP
   * @return createdByIP
  **/
  @javax.annotation.Nullable
  public Object getCreatedByIP() {
    return createdByIP;
  }


  public void setCreatedByIP(Object createdByIP) {
    this.createdByIP = createdByIP;
  }


  public Customers callDebug(CallDebugEnum callDebug) {
    
    this.callDebug = callDebug;
    return this;
  }

   /**
   * Get callDebug
   * @return callDebug
  **/
  @javax.annotation.Nullable
  public CallDebugEnum getCallDebug() {
    return callDebug;
  }


  public void setCallDebug(CallDebugEnum callDebug) {
    this.callDebug = callDebug;
  }


  public Customers mediaBypass(MediaBypassEnum mediaBypass) {
    
    this.mediaBypass = mediaBypass;
    return this;
  }

   /**
   * Get mediaBypass
   * @return mediaBypass
  **/
  @javax.annotation.Nullable
  public MediaBypassEnum getMediaBypass() {
    return mediaBypass;
  }


  public void setMediaBypass(MediaBypassEnum mediaBypass) {
    this.mediaBypass = mediaBypass;
  }


  public Customers accountLock(AccountLockEnum accountLock) {
    
    this.accountLock = accountLock;
    return this;
  }

   /**
   * Get accountLock
   * @return accountLock
  **/
  @javax.annotation.Nullable
  public AccountLockEnum getAccountLock() {
    return accountLock;
  }


  public void setAccountLock(AccountLockEnum accountLock) {
    this.accountLock = accountLock;
  }


  public Customers callRecording(CallRecordingEnum callRecording) {
    
    this.callRecording = callRecording;
    return this;
  }

   /**
   * Get callRecording
   * @return callRecording
  **/
  @javax.annotation.Nullable
  public CallRecordingEnum getCallRecording() {
    return callRecording;
  }


  public void setCallRecording(CallRecordingEnum callRecording) {
    this.callRecording = callRecording;
  }


  public Customers cdrRetention(Object cdrRetention) {
    
    this.cdrRetention = cdrRetention;
    return this;
  }

   /**
   * Get cdrRetention
   * @return cdrRetention
  **/
  @javax.annotation.Nullable
  public Object getCdrRetention() {
    return cdrRetention;
  }


  public void setCdrRetention(Object cdrRetention) {
    this.cdrRetention = cdrRetention;
  }


  public Customers cnamLookUps(CnamLookUpsEnum cnamLookUps) {
    
    this.cnamLookUps = cnamLookUps;
    return this;
  }

   /**
   * Get cnamLookUps
   * @return cnamLookUps
  **/
  @javax.annotation.Nullable
  public CnamLookUpsEnum getCnamLookUps() {
    return cnamLookUps;
  }


  public void setCnamLookUps(CnamLookUpsEnum cnamLookUps) {
    this.cnamLookUps = cnamLookUps;
  }


  public Customers holdMusic(HoldMusicEnum holdMusic) {
    
    this.holdMusic = holdMusic;
    return this;
  }

   /**
   * Get holdMusic
   * @return holdMusic
  **/
  @javax.annotation.Nullable
  public HoldMusicEnum getHoldMusic() {
    return holdMusic;
  }


  public void setHoldMusic(HoldMusicEnum holdMusic) {
    this.holdMusic = holdMusic;
  }


  public Customers transcribeCalls(TranscribeCallsEnum transcribeCalls) {
    
    this.transcribeCalls = transcribeCalls;
    return this;
  }

   /**
   * Get transcribeCalls
   * @return transcribeCalls
  **/
  @javax.annotation.Nullable
  public TranscribeCallsEnum getTranscribeCalls() {
    return transcribeCalls;
  }


  public void setTranscribeCalls(TranscribeCallsEnum transcribeCalls) {
    this.transcribeCalls = transcribeCalls;
  }


  public Customers maxOutboundCallRate(Object maxOutboundCallRate) {
    
    this.maxOutboundCallRate = maxOutboundCallRate;
    return this;
  }

   /**
   * Get maxOutboundCallRate
   * @return maxOutboundCallRate
  **/
  @javax.annotation.Nullable
  public Object getMaxOutboundCallRate() {
    return maxOutboundCallRate;
  }


  public void setMaxOutboundCallRate(Object maxOutboundCallRate) {
    this.maxOutboundCallRate = maxOutboundCallRate;
  }


  public Customers defaultBillMethod(DefaultBillMethodEnum defaultBillMethod) {
    
    this.defaultBillMethod = defaultBillMethod;
    return this;
  }

   /**
   * Get defaultBillMethod
   * @return defaultBillMethod
  **/
  @javax.annotation.Nullable
  public DefaultBillMethodEnum getDefaultBillMethod() {
    return defaultBillMethod;
  }


  public void setDefaultBillMethod(DefaultBillMethodEnum defaultBillMethod) {
    this.defaultBillMethod = defaultBillMethod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customers customers = (Customers) o;
    return Objects.equals(this.name, customers.name) &&
        Objects.equals(this.status, customers.status) &&
        Objects.equals(this.websiteUrl, customers.websiteUrl) &&
        Objects.equals(this.logo, customers.logo) &&
        Objects.equals(this.credit, customers.credit) &&
        Objects.equals(this.adminUserId, customers.adminUserId) &&
        Objects.equals(this.billingUserId, customers.billingUserId) &&
        Objects.equals(this.callRecordingUserId, customers.callRecordingUserId) &&
        Objects.equals(this.callForwardingCallLimit, customers.callForwardingCallLimit) &&
        Objects.equals(this.supportUserId, customers.supportUserId) &&
        Objects.equals(this.automaticRefillAmount, customers.automaticRefillAmount) &&
        Objects.equals(this.lowBalanceAlertAmount, customers.lowBalanceAlertAmount) &&
        Objects.equals(this.lowBalanceAlertAt, customers.lowBalanceAlertAt) &&
        Objects.equals(this.lowBalanceAlertCount, customers.lowBalanceAlertCount) &&
        Objects.equals(this.lastAutomaticRefillInvoice, customers.lastAutomaticRefillInvoice) &&
        Objects.equals(this.internationalCalling, customers.internationalCalling) &&
        Objects.equals(this.createdByIP, customers.createdByIP) &&
        Objects.equals(this.callDebug, customers.callDebug) &&
        Objects.equals(this.mediaBypass, customers.mediaBypass) &&
        Objects.equals(this.accountLock, customers.accountLock) &&
        Objects.equals(this.callRecording, customers.callRecording) &&
        Objects.equals(this.cdrRetention, customers.cdrRetention) &&
        Objects.equals(this.cnamLookUps, customers.cnamLookUps) &&
        Objects.equals(this.holdMusic, customers.holdMusic) &&
        Objects.equals(this.transcribeCalls, customers.transcribeCalls) &&
        Objects.equals(this.maxOutboundCallRate, customers.maxOutboundCallRate) &&
        Objects.equals(this.defaultBillMethod, customers.defaultBillMethod);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, status, websiteUrl, logo, credit, adminUserId, billingUserId, callRecordingUserId, callForwardingCallLimit, supportUserId, automaticRefillAmount, lowBalanceAlertAmount, lowBalanceAlertAt, lowBalanceAlertCount, lastAutomaticRefillInvoice, internationalCalling, createdByIP, callDebug, mediaBypass, accountLock, callRecording, cdrRetention, cnamLookUps, holdMusic, transcribeCalls, maxOutboundCallRate, defaultBillMethod);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customers {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    credit: ").append(toIndentedString(credit)).append("\n");
    sb.append("    adminUserId: ").append(toIndentedString(adminUserId)).append("\n");
    sb.append("    billingUserId: ").append(toIndentedString(billingUserId)).append("\n");
    sb.append("    callRecordingUserId: ").append(toIndentedString(callRecordingUserId)).append("\n");
    sb.append("    callForwardingCallLimit: ").append(toIndentedString(callForwardingCallLimit)).append("\n");
    sb.append("    supportUserId: ").append(toIndentedString(supportUserId)).append("\n");
    sb.append("    automaticRefillAmount: ").append(toIndentedString(automaticRefillAmount)).append("\n");
    sb.append("    lowBalanceAlertAmount: ").append(toIndentedString(lowBalanceAlertAmount)).append("\n");
    sb.append("    lowBalanceAlertAt: ").append(toIndentedString(lowBalanceAlertAt)).append("\n");
    sb.append("    lowBalanceAlertCount: ").append(toIndentedString(lowBalanceAlertCount)).append("\n");
    sb.append("    lastAutomaticRefillInvoice: ").append(toIndentedString(lastAutomaticRefillInvoice)).append("\n");
    sb.append("    internationalCalling: ").append(toIndentedString(internationalCalling)).append("\n");
    sb.append("    createdByIP: ").append(toIndentedString(createdByIP)).append("\n");
    sb.append("    callDebug: ").append(toIndentedString(callDebug)).append("\n");
    sb.append("    mediaBypass: ").append(toIndentedString(mediaBypass)).append("\n");
    sb.append("    accountLock: ").append(toIndentedString(accountLock)).append("\n");
    sb.append("    callRecording: ").append(toIndentedString(callRecording)).append("\n");
    sb.append("    cdrRetention: ").append(toIndentedString(cdrRetention)).append("\n");
    sb.append("    cnamLookUps: ").append(toIndentedString(cnamLookUps)).append("\n");
    sb.append("    holdMusic: ").append(toIndentedString(holdMusic)).append("\n");
    sb.append("    transcribeCalls: ").append(toIndentedString(transcribeCalls)).append("\n");
    sb.append("    maxOutboundCallRate: ").append(toIndentedString(maxOutboundCallRate)).append("\n");
    sb.append("    defaultBillMethod: ").append(toIndentedString(defaultBillMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("status");
    openapiFields.add("websiteUrl");
    openapiFields.add("logo");
    openapiFields.add("credit");
    openapiFields.add("adminUserId");
    openapiFields.add("billingUserId");
    openapiFields.add("callRecordingUserId");
    openapiFields.add("callForwardingCallLimit");
    openapiFields.add("supportUserId");
    openapiFields.add("automaticRefillAmount");
    openapiFields.add("lowBalanceAlertAmount");
    openapiFields.add("lowBalanceAlertAt");
    openapiFields.add("lowBalanceAlertCount");
    openapiFields.add("lastAutomaticRefillInvoice");
    openapiFields.add("internationalCalling");
    openapiFields.add("createdByIP");
    openapiFields.add("callDebug");
    openapiFields.add("mediaBypass");
    openapiFields.add("accountLock");
    openapiFields.add("callRecording");
    openapiFields.add("cdrRetention");
    openapiFields.add("cnamLookUps");
    openapiFields.add("holdMusic");
    openapiFields.add("transcribeCalls");
    openapiFields.add("maxOutboundCallRate");
    openapiFields.add("defaultBillMethod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("defaultBillMethod");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Customers
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Customers.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Customers is not found in the empty JSON string", Customers.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Customers.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Customers` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Customers.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Customers.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Customers' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Customers> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Customers.class));

       return (TypeAdapter<T>) new TypeAdapter<Customers>() {
           @Override
           public void write(JsonWriter out, Customers value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Customers read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Customers given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Customers
  * @throws IOException if the JSON string is invalid with respect to Customers
  */
  public static Customers fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Customers.class);
  }

 /**
  * Convert an instance of Customers to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

