/*
 * Circuit ID REST API
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.21
 * Contact: support@circuitid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circuitid.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GetCallQueue200Response
 */
public class GetCallQueue200ResponseTest {
    private final GetCallQueue200Response model = new GetCallQueue200Response();

    /**
     * Model tests for GetCallQueue200Response
     */
    @Test
    public void testGetCallQueue200Response() {
        // TODO: test GetCallQueue200Response
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'strategy'
     */
    @Test
    public void strategyTest() {
        // TODO: test strategy
    }

    /**
     * Test the property 'announcePosition'
     */
    @Test
    public void announcePositionTest() {
        // TODO: test announcePosition
    }

    /**
     * Test the property 'moh'
     */
    @Test
    public void mohTest() {
        // TODO: test moh
    }

    /**
     * Test the property 'callerResumeTimeout'
     */
    @Test
    public void callerResumeTimeoutTest() {
        // TODO: test callerResumeTimeout
    }

    /**
     * Test the property 'maxWaitTime'
     */
    @Test
    public void maxWaitTimeTest() {
        // TODO: test maxWaitTime
    }

    /**
     * Test the property 'maxWaitTimeNoAgent'
     */
    @Test
    public void maxWaitTimeNoAgentTest() {
        // TODO: test maxWaitTimeNoAgent
    }

    /**
     * Test the property 'maxNoAnswer'
     */
    @Test
    public void maxNoAnswerTest() {
        // TODO: test maxNoAnswer
    }

    /**
     * Test the property 'noAnswerDelayTimeout'
     */
    @Test
    public void noAnswerDelayTimeoutTest() {
        // TODO: test noAnswerDelayTimeout
    }

    /**
     * Test the property 'rejectTimeout'
     */
    @Test
    public void rejectTimeoutTest() {
        // TODO: test rejectTimeout
    }

    /**
     * Test the property 'busyTimeout'
     */
    @Test
    public void busyTimeoutTest() {
        // TODO: test busyTimeout
    }

    /**
     * Test the property 'wrapUpTimeout'
     */
    @Test
    public void wrapUpTimeoutTest() {
        // TODO: test wrapUpTimeout
    }

    /**
     * Test the property 'timeBasedScore'
     */
    @Test
    public void timeBasedScoreTest() {
        // TODO: test timeBasedScore
    }

    /**
     * Test the property 'tierRulesApply'
     */
    @Test
    public void tierRulesApplyTest() {
        // TODO: test tierRulesApply
    }

    /**
     * Test the property 'tierRuleNoAgentNoWait'
     */
    @Test
    public void tierRuleNoAgentNoWaitTest() {
        // TODO: test tierRuleNoAgentNoWait
    }

    /**
     * Test the property 'tierRuleWaitSecond'
     */
    @Test
    public void tierRuleWaitSecondTest() {
        // TODO: test tierRuleWaitSecond
    }

    /**
     * Test the property 'tierRuleWaitMultiplyLevel'
     */
    @Test
    public void tierRuleWaitMultiplyLevelTest() {
        // TODO: test tierRuleWaitMultiplyLevel
    }

    /**
     * Test the property 'abandonedResumeAllowed'
     */
    @Test
    public void abandonedResumeAllowedTest() {
        // TODO: test abandonedResumeAllowed
    }

    /**
     * Test the property 'discardAbandonedAfter'
     */
    @Test
    public void discardAbandonedAfterTest() {
        // TODO: test discardAbandonedAfter
    }

    /**
     * Test the property 'maxWaitTimeNoAgentTimeReached'
     */
    @Test
    public void maxWaitTimeNoAgentTimeReachedTest() {
        // TODO: test maxWaitTimeNoAgentTimeReached
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'createdByUserId'
     */
    @Test
    public void createdByUserIdTest() {
        // TODO: test createdByUserId
    }

    /**
     * Test the property 'updatedByUserId'
     */
    @Test
    public void updatedByUserIdTest() {
        // TODO: test updatedByUserId
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
