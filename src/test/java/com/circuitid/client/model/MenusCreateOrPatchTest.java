/*
 * Circuit ID REST API
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.22
 * Contact: support@circuitid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circuitid.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for MenusCreateOrPatch
 */
public class MenusCreateOrPatchTest {
    private final MenusCreateOrPatch model = new MenusCreateOrPatch();

    /**
     * Model tests for MenusCreateOrPatch
     */
    @Test
    public void testMenusCreateOrPatch() {
        // TODO: test MenusCreateOrPatch
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'maxExtensionLength'
     */
    @Test
    public void maxExtensionLengthTest() {
        // TODO: test maxExtensionLength
    }

    /**
     * Test the property 'speechRecognition'
     */
    @Test
    public void speechRecognitionTest() {
        // TODO: test speechRecognition
    }

    /**
     * Test the property 'directory'
     */
    @Test
    public void directoryTest() {
        // TODO: test directory
    }

    /**
     * Test the property 'greetingType'
     */
    @Test
    public void greetingTypeTest() {
        // TODO: test greetingType
    }

    /**
     * Test the property 'greetingTTS'
     */
    @Test
    public void greetingTTSTest() {
        // TODO: test greetingTTS
    }

    /**
     * Test the property 'menuVoice'
     */
    @Test
    public void menuVoiceTest() {
        // TODO: test menuVoice
    }

    /**
     * Test the property 'exitSound'
     */
    @Test
    public void exitSoundTest() {
        // TODO: test exitSound
    }

    /**
     * Test the property 'transferAnnouncement'
     */
    @Test
    public void transferAnnouncementTest() {
        // TODO: test transferAnnouncement
    }

    /**
     * Test the property 'maxFailures'
     */
    @Test
    public void maxFailuresTest() {
        // TODO: test maxFailures
    }

    /**
     * Test the property 'maxTimeouts'
     */
    @Test
    public void maxTimeoutsTest() {
        // TODO: test maxTimeouts
    }

    /**
     * Test the property 'timeout'
     */
    @Test
    public void timeoutTest() {
        // TODO: test timeout
    }

    /**
     * Test the property 'touchToneTerminators'
     */
    @Test
    public void touchToneTerminatorsTest() {
        // TODO: test touchToneTerminators
    }

    /**
     * Test the property 'timeschedule'
     */
    @Test
    public void timescheduleTest() {
        // TODO: test timeschedule
    }

    /**
     * Test the property 'destinationType'
     */
    @Test
    public void destinationTypeTest() {
        // TODO: test destinationType
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'ref'
     */
    @Test
    public void refTest() {
        // TODO: test ref
    }

    /**
     * Test the property 'callForwardingDestination'
     */
    @Test
    public void callForwardingDestinationTest() {
        // TODO: test callForwardingDestination
    }

}
