/*
 * Circuit ID REST API
 * # Introduction Circuit ID&reg; is an innovative cloud communications platform that redefines your connectivity experience. Our cutting-edge AI-powered solution seamlessly integrates calling, meetings, messaging, voicemail, fax, SIP Trunking, mobile broadband, and mobile phone services, accessible wherever you and your devices go.                  Whether you are a beginner getting started with our API or an experienced developer looking for advanced features, this documentation site will serve as your comprehensive guide.   We are excited to have you on board and are confident that this documentation site will empower you to leverage the full potential of our REST API.  If you have any questions or require further assistance, please don't hesitate to reach out to our support team.                  Happy coding!
 *
 * The version of the OpenAPI document: 0.47.21
 * Contact: support@circuitid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circuitid.client.model;

import com.circuitid.client.model.UsersCommunicationValue;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Users
 */
public class UsersTest {
    private final Users model = new Users();

    /**
     * Model tests for Users
     */
    @Test
    public void testUsers() {
        // TODO: test Users
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'sipPassword'
     */
    @Test
    public void sipPasswordTest() {
        // TODO: test sipPassword
    }

    /**
     * Test the property 'turnPassword'
     */
    @Test
    public void turnPasswordTest() {
        // TODO: test turnPassword
    }

    /**
     * Test the property 'first'
     */
    @Test
    public void firstTest() {
        // TODO: test first
    }

    /**
     * Test the property 'last'
     */
    @Test
    public void lastTest() {
        // TODO: test last
    }

    /**
     * Test the property 'mobilePhone'
     */
    @Test
    public void mobilePhoneTest() {
        // TODO: test mobilePhone
    }

    /**
     * Test the property 'businessPhone'
     */
    @Test
    public void businessPhoneTest() {
        // TODO: test businessPhone
    }

    /**
     * Test the property 'extension'
     */
    @Test
    public void extensionTest() {
        // TODO: test extension
    }

    /**
     * Test the property 'customCallerId'
     */
    @Test
    public void customCallerIdTest() {
        // TODO: test customCallerId
    }

    /**
     * Test the property 'jobTitle'
     */
    @Test
    public void jobTitleTest() {
        // TODO: test jobTitle
    }

    /**
     * Test the property 'department'
     */
    @Test
    public void departmentTest() {
        // TODO: test department
    }

    /**
     * Test the property 'office'
     */
    @Test
    public void officeTest() {
        // TODO: test office
    }

    /**
     * Test the property 'avatar'
     */
    @Test
    public void avatarTest() {
        // TODO: test avatar
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'isPrimary'
     */
    @Test
    public void isPrimaryTest() {
        // TODO: test isPrimary
    }

    /**
     * Test the property 'vmGreetingType'
     */
    @Test
    public void vmGreetingTypeTest() {
        // TODO: test vmGreetingType
    }

    /**
     * Test the property 'vmTimeout'
     */
    @Test
    public void vmTimeoutTest() {
        // TODO: test vmTimeout
    }

    /**
     * Test the property 'vmFile'
     */
    @Test
    public void vmFileTest() {
        // TODO: test vmFile
    }

    /**
     * Test the property 'vmPlaybackNumber'
     */
    @Test
    public void vmPlaybackNumberTest() {
        // TODO: test vmPlaybackNumber
    }

    /**
     * Test the property 'pin'
     */
    @Test
    public void pinTest() {
        // TODO: test pin
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'callerIdNumber'
     */
    @Test
    public void callerIdNumberTest() {
        // TODO: test callerIdNumber
    }

    /**
     * Test the property 'adminPermission'
     */
    @Test
    public void adminPermissionTest() {
        // TODO: test adminPermission
    }

    /**
     * Test the property 'billingPermission'
     */
    @Test
    public void billingPermissionTest() {
        // TODO: test billingPermission
    }

    /**
     * Test the property 'phonePermission'
     */
    @Test
    public void phonePermissionTest() {
        // TODO: test phonePermission
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'vmTranscription'
     */
    @Test
    public void vmTranscriptionTest() {
        // TODO: test vmTranscription
    }

    /**
     * Test the property 'communication'
     */
    @Test
    public void communicationTest() {
        // TODO: test communication
    }

}
